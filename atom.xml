<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>蒟蒻のBlog</title>
  <icon>https://zhangyaoan.github.io/icon.png</icon>
  
  <link href="https://zhangyaoan.github.io/atom.xml" rel="self"/>
  
  <link href="https://zhangyaoan.github.io/"/>
  <updated>2025-07-16T13:13:15.820Z</updated>
  <id>https://zhangyaoan.github.io/</id>
  
  <author>
    <name>unsigned char</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>KDE 配置记录</title>
    <link href="https://zhangyaoan.github.io/2025/06/09/KDE-beautify/"/>
    <id>https://zhangyaoan.github.io/2025/06/09/KDE-beautify/</id>
    <published>2025-06-09T11:49:00.088Z</published>
    <updated>2025-07-16T13:13:15.820Z</updated>
    
    <content type="html"><![CDATA[<p>众所周知，Gnome 40 之后的版本可个性化程度很差，尤其是 Gnome 48 更新了 UI，虽然配色方案好看了很多，但是用力过度的圆角让人感觉很不爽 <del>强迫症犯了（bs</del></p><p>在这时我心生了切换到 KDE 的念头，但是由于硬盘中 280G+ 的 <em>不明文件</em> 实际上并不可行，所以最后也只是在虚拟机里体验了一把</p><blockquote><p>说句闲话：我真的很喜欢 Gnome 的设计理念，相比之下 KDE 的设计显得古板、过时，然而优秀设计理念背后却是与「经典」应用程序的格格不入；此外，Gnome Extension 的丰富程度也是 KDE 望尘莫及的</p></blockquote><span id="more"></span><p><strong>注意</strong>：以下内容均在 Fedora 42 KDE 虚拟机内进行</p><h2 id="成果"><a href="#成果" class="headerlink" title="成果"></a>成果</h2><p><img src="/2025/06/09/KDE-beautify/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE_20250716_211027.png" alt="screen_shot_1"></p><p><img src="/2025/06/09/KDE-beautify/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE_20250716_210910.png" alt="screen_shot_2"></p><h2 id="主题收集"><a href="#主题收集" class="headerlink" title="主题收集"></a>主题收集</h2><h3 id="颜色主题"><a href="#颜色主题" class="headerlink" title="颜色主题"></a>颜色主题</h3><ul><li>Arc (Dark)</li><li>Atom One Dark</li><li>Breeze Dracula</li><li>Catppuccin*</li><li>Tokyo Night</li><li>Vinyl（见下）</li></ul><p>都可以在 KDE Store 里找到</p><h3 id="应用主题"><a href="#应用主题" class="headerlink" title="应用主题"></a>应用主题</h3><ul><li><a href="https://github.com/paulmcauley/klassy">Klassy</a>，有 COPR <a href="https://copr.fedorainfracloud.org/coprs/errornointernet/klassy/">errornointernet&#x2F;klassy</a>，样式几乎与 Breeze 没有差别，但是高度可定制</li><li><a href="https://github.com/ekaaty/vinyl-theme/?tab=readme-ov-file#vinyl-theme-for-kde-plasma-6">Vinyl</a>，有官方 COPR；不过实际上我觉得样式很怪，但是颜色还是很不错的</li></ul><p>并没有包括 Kvantum 主题，原因是我发现它与颜色主题不能很好的配合</p><h4 id="libadwaita-app"><a href="#libadwaita-app" class="headerlink" title="libadwaita app"></a>libadwaita app</h4><p>libadwaita app 不支持主题化，但是有简单的方法可以 hack</p><p>替换 <code>~/.config/gtk-4.0/gtk.css</code>，建议备份原文件</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@import</span> <span class="string">&#x27;colors.css&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@define-color</span> warning_bg_<span class="attribute">color</span> @warning_<span class="attribute">color</span>_breeze;</span><br><span class="line"><span class="keyword">@define-color</span> warning_fg_<span class="attribute">color</span> #ffffff;</span><br><span class="line"><span class="keyword">@define-color</span> warning_<span class="attribute">color</span> @warning_<span class="attribute">color</span>_breeze;</span><br><span class="line"><span class="keyword">@define-color</span> error_bg_<span class="attribute">color</span> @error_<span class="attribute">color</span>_breeze;</span><br><span class="line"><span class="keyword">@define-color</span> error_fg_<span class="attribute">color</span> #ffffff;</span><br><span class="line"><span class="keyword">@define-color</span> error_<span class="attribute">color</span> @error_<span class="attribute">color</span>_breeze;</span><br><span class="line"><span class="keyword">@define-color</span> success_bg_<span class="attribute">color</span> @success_<span class="attribute">color</span>_breeze;</span><br><span class="line"><span class="keyword">@define-color</span> success_fg_<span class="attribute">color</span> #ffffff;</span><br><span class="line"><span class="keyword">@define-color</span> success_<span class="attribute">color</span> @success_<span class="attribute">color</span>_breeze;</span><br><span class="line"><span class="keyword">@define-color</span> destructive_bg_<span class="attribute">color</span> #ffffff;</span><br><span class="line"><span class="keyword">@define-color</span> destructive_fg_<span class="attribute">color</span> #ffffff;</span><br><span class="line"><span class="keyword">@define-color</span> destructive_<span class="attribute">color</span> #ffffff;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@define-color</span> window_bg_<span class="attribute">color</span> @theme_bg_<span class="attribute">color</span>_breeze;</span><br><span class="line"><span class="keyword">@define-color</span> window_fg_<span class="attribute">color</span> @theme_fg_<span class="attribute">color</span>_breeze;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@define-color</span> view_bg_<span class="attribute">color</span> @theme_base_<span class="attribute">color</span>_breeze;</span><br><span class="line"><span class="keyword">@define-color</span> view_fg_<span class="attribute">color</span> @theme_fg_<span class="attribute">color</span>_breeze;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@define-color</span> accent_<span class="attribute">color</span> @theme_button_decoration_focus_breeze;</span><br><span class="line"><span class="keyword">@define-color</span> accent_bg_<span class="attribute">color</span> @theme_button_decoration_focus_breeze;</span><br><span class="line"><span class="keyword">@define-color</span> accent_fg_<span class="attribute">color</span> @theme_fg_<span class="attribute">color</span>_breeze;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@define-color</span> headerbar_bg_<span class="attribute">color</span> @theme_header_background_breeze;</span><br><span class="line"><span class="keyword">@define-color</span> headerbar_backdrop_<span class="attribute">color</span> @theme_header_background_backdrop_breeze;</span><br><span class="line"><span class="keyword">@define-color</span> headerbar_fg_<span class="attribute">color</span> @theme_header_foreground_breeze;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">@define-color headerbar_border_color @borders_breeze;</span></span><br><span class="line"><span class="comment">@define-color headerbar_shade_color @borders_breeze;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@define-color</span> popover_bg_<span class="attribute">color</span> @tooltip_background_breeze;</span><br><span class="line"><span class="keyword">@define-color</span> popover_fg_<span class="attribute">color</span> @tooltip_text_breeze;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@define-color</span> dialog_bg_<span class="attribute">color</span> @popover_bg_<span class="attribute">color</span>;</span><br><span class="line"><span class="keyword">@define-color</span> dialog_fg_<span class="attribute">color</span> @popover_fg_<span class="attribute">color</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@define-color</span> card_fg_<span class="attribute">color</span> @theme_fg_<span class="attribute">color</span>_breeze;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">@define-color card_bg_color @theme_header_background_breeze;</span></span><br><span class="line"><span class="comment">@define-color card_shade_color @borders_breeze;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@define-color</span> sidebar_bg_<span class="attribute">color</span> @theme_bg_<span class="attribute">color</span>_breeze;</span><br><span class="line"><span class="keyword">@define-color</span> sidebar_fg_<span class="attribute">color</span> @theme_fg_<span class="attribute">color</span>_breeze;</span><br><span class="line"><span class="keyword">@define-color</span> sidebar_backdrop_<span class="attribute">color</span> @theme_bg_<span class="attribute">color</span>_breeze;</span><br><span class="line"><span class="keyword">@define-color</span> sidebar_border_<span class="attribute">color</span> @borders_breeze;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@define-color</span> sidebar_shade_<span class="attribute">color</span> @borders_breeze;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@define-color</span> secondary_sidebar_bg_<span class="attribute">color</span> @sidebar_bg_<span class="attribute">color</span>;</span><br><span class="line"><span class="keyword">@define-color</span> secondary_sidebar_fg_<span class="attribute">color</span> @sidebar_fg_<span class="attribute">color</span>;</span><br><span class="line"><span class="keyword">@define-color</span> secondary_sidebar_backdrop_<span class="attribute">color</span> @sidebar_backdrop_<span class="attribute">color</span>;</span><br><span class="line"><span class="keyword">@define-color</span> secondary_sidebar_shade_<span class="attribute">color</span> @sidebar_shade_<span class="attribute">color</span>;</span><br><span class="line"><span class="keyword">@define-color</span> secondary_sidebar_border_<span class="attribute">color</span> @sidebar_border_<span class="attribute">color</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* @define-color shade_color rgba(0, 0, 0, 0.36); */</span></span><br><span class="line"><span class="comment">/* @define-color scrollbar_outline_color rgba(0, 0, 0, 0.5); */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@define-color</span> blue_1 #<span class="number">99</span>c1f1;</span><br><span class="line"><span class="keyword">@define-color</span> blue_2 #<span class="number">62</span>a0ea;</span><br><span class="line"><span class="keyword">@define-color</span> blue_3 #<span class="number">3584</span>e4;</span><br><span class="line"><span class="keyword">@define-color</span> blue_4 #<span class="number">1</span>c71d8;</span><br><span class="line"><span class="keyword">@define-color</span> blue_5 #<span class="number">1</span>a5fb4;</span><br><span class="line"><span class="keyword">@define-color</span> green_1 #<span class="number">8</span>ff0a4;</span><br><span class="line"><span class="keyword">@define-color</span> green_2 #<span class="number">57</span>e389;</span><br><span class="line"><span class="keyword">@define-color</span> green_3 #<span class="number">33</span>d17a;</span><br><span class="line"><span class="keyword">@define-color</span> green_4 #<span class="number">2</span>ec27e;</span><br><span class="line"><span class="keyword">@define-color</span> green_5 #<span class="number">26</span>a269;</span><br><span class="line"><span class="keyword">@define-color</span> yellow_1 #f9f06b;</span><br><span class="line"><span class="keyword">@define-color</span> yellow_2 #f8e45c;</span><br><span class="line"><span class="keyword">@define-color</span> yellow_3 #f6d32d;</span><br><span class="line"><span class="keyword">@define-color</span> yellow_4 #f5c211;</span><br><span class="line"><span class="keyword">@define-color</span> yellow_5 #e5a50a;</span><br><span class="line"><span class="keyword">@define-color</span> orange_1 #ffbe6f;</span><br><span class="line"><span class="keyword">@define-color</span> orange_2 #ffa348;</span><br><span class="line"><span class="keyword">@define-color</span> orange_3 #ff7800;</span><br><span class="line"><span class="keyword">@define-color</span> orange_4 #e66100;</span><br><span class="line"><span class="keyword">@define-color</span> orange_5 #c64600;</span><br><span class="line"><span class="keyword">@define-color</span> red_1 #f66151;</span><br><span class="line"><span class="keyword">@define-color</span> red_2 #ed333b;</span><br><span class="line"><span class="keyword">@define-color</span> red_3 #e01b24;</span><br><span class="line"><span class="keyword">@define-color</span> red_4 #c01c28;</span><br><span class="line"><span class="keyword">@define-color</span> red_5 #a51d2d;</span><br><span class="line"><span class="keyword">@define-color</span> purple_1 #dc8add;</span><br><span class="line"><span class="keyword">@define-color</span> purple_2 #c061cb;</span><br><span class="line"><span class="keyword">@define-color</span> purple_3 #<span class="number">9141</span>ac;</span><br><span class="line"><span class="keyword">@define-color</span> purple_4 #<span class="number">813</span>d9c;</span><br><span class="line"><span class="keyword">@define-color</span> purple_5 #<span class="number">613583</span>;</span><br><span class="line"><span class="keyword">@define-color</span> brown_1 #cdab8f;</span><br><span class="line"><span class="keyword">@define-color</span> brown_2 #b5835a;</span><br><span class="line"><span class="keyword">@define-color</span> brown_3 #<span class="number">986</span>a44;</span><br><span class="line"><span class="keyword">@define-color</span> brown_4 #<span class="number">865</span>e3c;</span><br><span class="line"><span class="keyword">@define-color</span> brown_5 #<span class="number">63452</span>c;</span><br><span class="line"><span class="keyword">@define-color</span> light_1 #ffffff;</span><br><span class="line"><span class="keyword">@define-color</span> light_2 #f6f5f4;</span><br><span class="line"><span class="keyword">@define-color</span> light_3 #deddda;</span><br><span class="line"><span class="keyword">@define-color</span> light_4 #c0bfbc;</span><br><span class="line"><span class="keyword">@define-color</span> light_5 #<span class="number">9</span>a9996;</span><br><span class="line"><span class="keyword">@define-color</span> dark_1 #<span class="number">77767</span>b;</span><br><span class="line"><span class="keyword">@define-color</span> dark_2 #<span class="number">5</span>e5c64;</span><br><span class="line"><span class="keyword">@define-color</span> dark_3 #<span class="number">3</span>d3846;</span><br><span class="line"><span class="keyword">@define-color</span> dark_4 #<span class="number">241</span>f31;</span><br><span class="line"><span class="keyword">@define-color</span> dark_5 #<span class="number">000000</span>;</span><br></pre></td></tr></table></figure><p><em>参见<a href="https://discuss.kde.org/t/simple-hack-to-tinting-theming-libadwaita-gtk4-apps-in-kde-plasma/29444">此处</a></em></p><h3 id="窗口装饰"><a href="#窗口装饰" class="headerlink" title="窗口装饰"></a>窗口装饰</h3><p>Klassy。高度可定制，特别是可以使用图标主题中的图标</p><h3 id="Plasma-外观主题"><a href="#Plasma-外观主题" class="headerlink" title="Plasma 外观主题"></a>Plasma 外观主题</h3><ul><li>Arc Color</li><li><del>Breeze Glass</del>（似乎是没有适配 KDE 6 的原因，看上去非常奇怪）</li><li>Leaf</li><li>Materia Color</li><li>Muzu，强烈推荐</li><li>Utterly-Round</li><li>Vinly（见上）</li></ul><p>都是可以适应颜色主题的~</p><h3 id="图标"><a href="#图标" class="headerlink" title="图标"></a>图标</h3><p>Papirus，又多又好看</p><h3 id="SDDM"><a href="#SDDM" class="headerlink" title="SDDM"></a>SDDM</h3><p><a href="https://github.com/Keyitdev/sddm-astronaut-theme">sddm-astronaut-theme</a>，10 in one</p><p>甚至支持动态背景</p><p><img src="/2025/06/09/KDE-beautify/sddm.png" alt="sddm_theme"></p><p>👆 Hyprland Kath 主题</p><h2 id="小部件"><a href="#小部件" class="headerlink" title="小部件"></a>小部件</h2><ul><li><p>SCP Menu，似乎缺少中文，我自己简单翻译了一下 QwQ<br><img src="/2025/06/09/KDE-beautify/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE_20250609_194728.png" alt="scp_menu"></p></li><li><p>Overview Gnome-like 的桌面概览按钮</p></li></ul><h2 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h2><p>似乎没什么好说的，KDE 自带的就已经功能很全面了（代价是复杂的界面）</p><ul><li>媒体播放器：Haruna，基于 mpv</li><li>文本编辑器：Kate，功能完全不输没插件的 VSCode</li><li>电子书：著名的 calibre，记得添加环境变量 <code>CALIBRE_USE_SYSTEM_THEME=true</code></li><li>输入法：Fcitx5，Waland 下配置似乎有点麻烦，好像与 Fedora 自带的 <code>im-settings</code> 冲突；自带的 Breeze 主题可以自动适应颜色主题，好评</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;众所周知，Gnome 40 之后的版本可个性化程度很差，尤其是 Gnome 48 更新了 UI，虽然配色方案好看了很多，但是用力过度的圆角让人感觉很不爽 &lt;del&gt;强迫症犯了（bs&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;在这时我心生了切换到 KDE 的念头，但是由于硬盘中 280G+ 的 &lt;em&gt;不明文件&lt;/em&gt; 实际上并不可行，所以最后也只是在虚拟机里体验了一把&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;说句闲话：我真的很喜欢 Gnome 的设计理念，相比之下 KDE 的设计显得古板、过时，然而优秀设计理念背后却是与「经典」应用程序的格格不入；此外，Gnome Extension 的丰富程度也是 KDE 望尘莫及的&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="技术" scheme="https://zhangyaoan.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="Linux" scheme="https://zhangyaoan.github.io/tags/Linux/"/>
    
    <category term="颓废" scheme="https://zhangyaoan.github.io/tags/%E9%A2%93%E5%BA%9F/"/>
    
    <category term="KDE" scheme="https://zhangyaoan.github.io/tags/KDE/"/>
    
  </entry>
  
  <entry>
    <title>记一次讨论</title>
    <link href="https://zhangyaoan.github.io/2025/03/22/Collision-dectection/"/>
    <id>https://zhangyaoan.github.io/2025/03/22/Collision-dectection/</id>
    <published>2025-03-22T06:44:39.000Z</published>
    <updated>2025-03-22T07:14:51.850Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>某物理老师在公开课上使用 AI 生成的 HTML 动画演示分子热运动。我对其碰撞检测的算法产生了兴趣。研究代码后发现，除去各种 bug，它甚至在使用单次 $O(n^2)$ 的暴力算法检测碰撞……</p><p>……就这点破事值得写一篇文章吗 QAQ……</p><p>……我现在连这种简单问题也解决不了吗 QwQ……</p></blockquote><span id="more"></span><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>有 $n$ 个大小相等的小球进行无序运动，对于某一时刻，我们想知道所有发生碰撞的小球。</p><p>形式化地说，在平面上有 $n$ 个点对近似均匀分布，求所有距离小于等于 $2r$ 的点对，$2r \ll \text{点之间的平均距离}$（可以认为所求点对数目最大为 $O(n)$）。</p><p>我们需要优于 $O(n^2)$ 的算法。</p><h2 id="讨论过程"><a href="#讨论过程" class="headerlink" title="讨论过程"></a>讨论过程</h2><p>与 NAPeach 讨论，并很快偏离话题</p><ul><li>NAPeach: 随机化算法！</li></ul><p>发现 neko_yizhexu，遂与 neko_yizhexu 讨论</p><ul><li>neko_yizhexu: （使用你谷平面最近点对的乱搞算法）将每个点旋转某角度，对 $x + y$ 排序，取每个点周围 $50$ 个点进行比较 ——$O(n \log n)$，瓶颈在于排序</li><li>unsigned_char: 对点的 $x$ 座标排序后遍历，使用平衡树或线段树维护 $y$ 座标，对于 $y$ 座标相近的点使用栈维护，每遍历到一个点后查询与其 $y$ 座标相近的点，取栈顶 ——近似 $O(n \log n)$</li><li>neko_yizhexu: （就 unsigned_char 的方法）不使用 DS，以 $\sqrt{n}$ 为块长分块 —— $O(n \sqrt{n})$</li></ul><p>neko_yizhexu 发现 听取MLE声一片 和 岂非，并邀请二人加入讨论</p><ul><li>听取MLE声一片: （可以认为是点重合吗？……）以 $4r \times 4r$ 为一个像素，将点映射到像素上，用 <code>map</code> 维护 ——$O(n \log n)$ 取决于<code>map</code> 的实现方式</li></ul><p>完结撒花</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;某物理老师在公开课上使用 AI 生成的 HTML 动画演示分子热运动。我对其碰撞检测的算法产生了兴趣。研究代码后发现，除去各种 bug，它甚至在使用单次 $O(n^2)$ 的暴力算法检测碰撞……&lt;/p&gt;
&lt;p&gt;……就这点破事值得写一篇文章吗 QAQ……&lt;/p&gt;
&lt;p&gt;……我现在连这种简单问题也解决不了吗 QwQ……&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="技术" scheme="https://zhangyaoan.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="生活" scheme="https://zhangyaoan.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>Forget &amp; Memory —— OI 退役感言</title>
    <link href="https://zhangyaoan.github.io/2024/11/23/Away-from-OI/"/>
    <id>https://zhangyaoan.github.io/2024/11/23/Away-from-OI/</id>
    <published>2024-11-23T10:52:22.000Z</published>
    <updated>2024-12-14T15:23:39.552Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>以个人的水平，远远不足以参加省选，NOIP 之后，不论结果如何，都是要退役了。近日忙于男八的准备工作，也看到了 Anoshag_Ruwan， Coder_User 等一众退役 OIer，想到自己一周之后也会和他们一样，莫名地感到有点伤感。</p><p>回想起这 4 年来夹杂着颓废和摆烂的 OI 生涯，还是有许多事情是值得回忆的；退役之后，我当如何面对 whk，如何面对繁杂的人际关系？面对着未知的未来，多少有点迷茫……</p><p>4 年的 OI 生涯，是时候告一段落了，该做一下总结了……</p><p>——写于 2024 年 11 月 23 日傍晚，NOIP 2024 前一周</p></blockquote><span id="more"></span><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>其实本应该上个周写的，但是刚打完 NOIP，内心是崩溃的，根本没心情写。之前定的标题是「过去，现在于未来」，但是发现对未来仍是很迷茫，不知道写什么好，于是改成了这个题目。（P.S. <code>Foreget</code> 和 <code>memory</code> 是 NOIP 2024 的解压密码和 pdf 密码，现在回想起来也是有所感慨）</p><p>先回忆一下我的 OI 生涯吧。小学 6 年级，热衷于编程，正值网课无所事事，同学给我推了一个 C++ 的公开课，就抱着试试的心态加入了。后来才知道是衡水中学的 OI 入门课。当时我在语法上进步迅速，就觉得自己有天赋，加之以兴趣，就决定坚持学了下来。公开课结束后我按照教练的建议买了《一本通》自学（后来才发现一本通就是 shit），并于 2020 年 10 月注册了洛谷。当时也是个典型的 xxs，喜欢水谷，关注了一堆不相关的人（直到最近才清理完），很颓废。</p><p>上初中后，参加了两次 CSP-J，都没通过初赛，初三的那次倒是过初赛了，但是复赛因疫情取消了（后来又复活了，但是成绩没有用 <del>白白给 CCF 交钱</del>）。这时我自学算法遇到了一些困难，加上 whk 的影响（那时 OI 对中考没有帮助 <del>早生一年 QwQ</del>），逐渐对 OI 失去了兴趣。但是同时我也意识到颓废是不好的，逐渐戒掉了水谷。</p><p>后来自招进入了 QDEZ，在学科营决然选择了 OI <del>走上了 OI 的不归路</del>，当时的模拟赛我似乎打地还挺好？开学之后直接报了 CSP-S，因此加入了 QDEZ OI 训练（似乎 OI 是 QDEZ 唯一不需要选拔就可以参训的竞赛）。在训练中结识了同班的 22LXERr 等人。国庆参加了 qbxt，感觉自己最大的收获不是学了多少新算法，而是消除了对难题的恐惧。在这期间结识了 NAPeach。其实我此时会的算法很少（我甚至是在 NOIP 前不久才学会线段树的），但是凭着暴力和乱搞，在模拟赛中取得了还算不错的成绩（实际上很多高二 OIer 只是不想写暴力 <del>没想到一年后我也会成为他们中的一员</del>），<del>对自己产生了信心</del>。CSP-S 2023 打了 165pts (T1 100pts + T2 65pts 乱搞)，拿了 1&#x3D;。之后就是 NOIP，不幸的是，我在那前一天突然感冒发烧了，第二天在体温不正常的情况下打了 100pts (T1 90pts，没特判 $n &#x3D; 0$ 挂了 10pts，T2 10pts)，喜提 3&#x3D;。也许是由于我觉得感冒影响了我的发挥，也许是由于我 T2 想到了正解（但是没调出来），我坚信自己有 1&#x3D; 的实力，在 NOIP 之后继续留了下来，而 22LXERr 等一众高一 OIer 都退役了，机房里一下子冷清了许多（记得之前机房一度有近 50 人）。在这段时间，我学习了很多新算法，算是填补了自己的知识漏洞 <del>虽然很颓废</del>。暑假，参加了 SDSC，和 k_Sword 和 JRRDG 混熟了，认识了新高一 OIer hyc，也面基了 QLR 等一众大佬。</p><p>高二开学，高二 OIer 就只剩 7 人了（我, NAPeach, k_Sword, zzethld, jl, wsb 和 JRRDG），与去年的人数相去甚远。新高一 OIer 好强，被吊打 QwQ。在这段时间，我主持了 CSP-S 赛前欢乐赛（我供了两题（其中一题是搬的 SDSC），NAPeach 供了一题，k_Sword 和 zzethld 供了一题），总体上还算成功。后来参加了男人八题的出题，但是没供题（写了 3 个 SPJ，造了一组数据）。也算是一个比较活跃的高二 OIer 吧。<a href="/2024/10/27/CSP-S-2024-summary/">CSP-S 2024</a> 打了 250pts，拿下 7 级钩，也许是我 OI 生涯中的高光时刻了吧。或许是在 CSP-S 中用光了 rp，随后和 NAPeach 与 k_Sword 组队参加的 <a href="/2024/10/27/CCPC-2024-JN/">CCPC JN</a> 就打铁了。之后就是 <a href="/2024/11/23/NOIP-2024-summary/">NOIP 2024</a>，没什么好说的。</p><p>回顾我<del>失败</del>的 OI 生涯，我从中获得了什么？我收获了知识，不止限于 OI 领域；我找到了自己的兴趣所在；我结识了 NAPeach, k_Sword 和 oyy 这样的人；让我了解了真正的 internet，使我知道有一群人为了「自由和开源软件」事业而不计回报地付出，如果没有 OI，我永远不会了解这些……这些都不是一个奖项所能衡量的。虽然有遗憾，我想，我可以说，我不后悔学 OI，如果再来一次，我仍然会选择 OI。</p><p>——2024&#x2F;12&#x2F;6</p><h2 id="说句闲话"><a href="#说句闲话" class="headerlink" title="说句闲话"></a>说句闲话</h2><p>NOIP 前一天，我对 NAPeach 说，如果我们能在赛场上保持理智，就不会有问题。我终究还算失去了理智。</p><p>今天晚上和 NAPeach 谈到退役后的打算，我终还是放不下 OI。在这个周，我去了三次机房，写大模拟。现在想想，我大概只是在怀念过去罢。其实理智的分析一下，我所执着的 NOIP 1&#x3D;，只不过是为了证明自己是一个<strong>合格的</strong> OIer。</p><p>是时候放下 OI 了。毕竟生活不止有 OI，正如 NAPeach 所说：Goodbye OI, hello world. 下周我不能再去机房写大模拟了。</p><p>P.S. hcc 居然还认为我和 zzethld 是 OI 有关人员</p><p>哦不对，zzethld 确实是 OI 有关人员，他要冲省选了。</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;以个人的水平，远远不足以参加省选，NOIP 之后，不论结果如何，都是要退役了。近日忙于男八的准备工作，也看到了 Anoshag_Ruwan， Coder_User 等一众退役 OIer，想到自己一周之后也会和他们一样，莫名地感到有点伤感。&lt;/p&gt;
&lt;p&gt;回想起这 4 年来夹杂着颓废和摆烂的 OI 生涯，还是有许多事情是值得回忆的；退役之后，我当如何面对 whk，如何面对繁杂的人际关系？面对着未知的未来，多少有点迷茫……&lt;/p&gt;
&lt;p&gt;4 年的 OI 生涯，是时候告一段落了，该做一下总结了……&lt;/p&gt;
&lt;p&gt;——写于 2024 年 11 月 23 日傍晚，NOIP 2024 前一周&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="OI" scheme="https://zhangyaoan.github.io/tags/OI/"/>
    
    <category term="杂感" scheme="https://zhangyaoan.github.io/tags/%E6%9D%82%E6%84%9F/"/>
    
  </entry>
  
  <entry>
    <title>NOIP 2024 爆零记</title>
    <link href="https://zhangyaoan.github.io/2024/11/23/NOIP-2024-summary/"/>
    <id>https://zhangyaoan.github.io/2024/11/23/NOIP-2024-summary/</id>
    <published>2024-11-23T10:50:25.000Z</published>
    <updated>2024-12-07T11:03:13.875Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本篇是 NOIP 2024 的游记，之后就要退役了 QwQ，所以这大概是我的最后一篇 OI 赛事的游记了</p></blockquote><p>期望得分 $[40, 60] + [20, 40] + 0 + 0 &#x3D; [60, 100] pts$ 全是无脑特殊性质 <del>和<strong>爆零</strong>有什么区别</del></p><p>实际得分 $60 + 35 &#x3D; 95 pts$，预料之内</p><p>被 T1 和 T2 创死，拿下 OI 生涯中最差成绩，省四遗憾离场</p><p>OI 生涯就这样不圆满地结束了 QwQ</p><span id="more"></span><h2 id="记录"><a href="#记录" class="headerlink" title="记录"></a>记录</h2><h3 id="T1"><a href="#T1" class="headerlink" title="T1"></a>T1</h3><p>下发题目时就发现是很一眼的贪心，但是代码难度很高。场上写了 170 行，调试了两小时，暂时放弃。最后又调了一会，但是最终也没能调出来，只能通过特殊性质 $A$ 和 $B$</p><p>期望得分 $[40, 60]$，视 CCF 数据强弱而定</p><h3 id="T2"><a href="#T2" class="headerlink" title="T2"></a>T2</h3><p>数学推式子题。似乎是 Easy 题。然而场上根本没推出来。最后一个小时心态崩了，以赌一把的心态，凭感觉写了一个做法（实际上我在看 T3 之前就已经想到过，且当时就已经证伪），假了。调不出来。</p><p>仅能通过特殊性质 $A$，期望得分 $[20, 40]$，视数据强度而定（大概率 $20pts$）</p><h3 id="T3"><a href="#T3" class="headerlink" title="T3"></a>T3</h3><p>暂停 T1 之后，先看了下 T2，没想出做法，遂开 T3。发现对于 $k &#x3D; 1$ 的情况，答案等于将给定边的端点合并后作为根的 DFS 序的数量（其实是假的），遂写换根 DP，完成两个 DFS（即程序的核心部分）后，感觉不对劲，再次阅读题面，发现是输出对于每个 $k$ 的方案数的并，当前解法只有 $20pts$，且手玩小样例发现算法假了，果断放弃。浪费了一个小时的时间。</p><p>赛后和 zzethld 交流发现我的思路很接近 $k &#x3D; 1$ 的解法（尽管 DFS 序计数是假的，但是 DP 思路较类似，式子很相似），后悔放弃 QwQ</p><h3 id="T4"><a href="#T4" class="headerlink" title="T4"></a>T4</h3><p>看了题面，感觉很神笔。没写。听说写线段树有 $40pts$ 的暴力 <del>但是我真的能写出来吗</del></p><h2 id="反思"><a href="#反思" class="headerlink" title="反思"></a>反思</h2><ul><li>数学能力太差。数学（主要是数论和组合数学）一直是我的弱项，模拟赛也多次被数学推式子题卡住。</li><li>代码能力太差。或许，换句话说，是对自己太过自信，以为自己有思路就能写出正解。</li><li>开题策略有误。T1 这种好想难写的题就不应该碰，模拟赛已经被这种题创死多次了，拿特殊性质分跑路才是正道；先开 T2 或许有希望想出正解；T3 过早放弃，再多思考一会或许能有出路？其实最重要的还是再 T1 上浪费太多时间了。</li><li>没有对过去进行好的反思和总结，特别在开题策略上。</li><li>心态有问题，这也是我屡次再 NOIP 上挂分的原因之一。<strong>心存执念</strong>往往导致我死冲正解，最后不仅没冲出来，连暴力也没时间写。最后一个小时心态崩溃，根本无法专注下来思考问题，在 T2 使用之前已经证伪的做法就可以看出。</li></ul><p><del>可是现在再反思这些还有什么意义呢？反正都已经退役了</del></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>还是心有不甘啊~</p><p>努力了一年，打的分数和零基础的选手一样，甚至连去年的自己都打不过~ 学会了一堆算法却连一个都没用上~ 感觉这段时间的努力都付诸东流了 QwQ</p><p>但是无论如何，OI 生涯都告一段落了，是时候该放下了。</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本篇是 NOIP 2024 的游记，之后就要退役了 QwQ，所以这大概是我的最后一篇 OI 赛事的游记了&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;期望得分 $[40, 60] + [20, 40] + 0 + 0 &amp;#x3D; [60, 100] pts$ 全是无脑特殊性质 &lt;del&gt;和&lt;strong&gt;爆零&lt;/strong&gt;有什么区别&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;实际得分 $60 + 35 &amp;#x3D; 95 pts$，预料之内&lt;/p&gt;
&lt;p&gt;被 T1 和 T2 创死，拿下 OI 生涯中最差成绩，省四遗憾离场&lt;/p&gt;
&lt;p&gt;OI 生涯就这样不圆满地结束了 QwQ&lt;/p&gt;</summary>
    
    
    
    
    <category term="OI" scheme="https://zhangyaoan.github.io/tags/OI/"/>
    
    <category term="游记" scheme="https://zhangyaoan.github.io/tags/%E6%B8%B8%E8%AE%B0/"/>
    
    <category term="CSP/NOIP" scheme="https://zhangyaoan.github.io/tags/CSP-NOIP/"/>
    
  </entry>
  
  <entry>
    <title>NOI Linux 使用技巧</title>
    <link href="https://zhangyaoan.github.io/2024/11/12/NOI-Linux-note/"/>
    <id>https://zhangyaoan.github.io/2024/11/12/NOI-Linux-note/</id>
    <published>2024-11-12T10:12:00.000Z</published>
    <updated>2024-11-22T14:59:00.062Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>前情提要：由于我是机房中为数不多的几个用过 NOI Linux 的人，zhub 让我写了本文以向大家分享 NOI Linux 使用技巧。</p><p><del>疑似是有点太详细了，我写的大部分东西 zhub 都讲了</del></p></blockquote><blockquote><p>首先声明一下，我不是 Linux 专家，对一些东西了解不多，只是分享一些 <strong>实用主义</strong> 的技巧，请大佬轻喷</p></blockquote><p><strong>强烈建议场上把在 Windows 中写的程序在 NOI Linux 编译一遍，防止挂分</strong></p><span id="more"></span><h2 id="以下代码在-Linux-中不能过编"><a href="#以下代码在-Linux-中不能过编" class="headerlink" title="以下代码在 Linux 中不能过编"></a>以下代码在 Linux 中不能过编</h2><ul><li><code>#include&lt;bits\stdc++.h&gt;</code> : 应写成 <code>#include&lt;bits/stdc++.h&gt;</code></li><li><code>#include&lt;windows.h&gt;</code> : Windows 下特有的头文件，请使用 <code>#include&lt;cstdlib&gt;</code> 调用 <code>system()</code></li><li>这玩意在 Dev-C++ 中甚至<strong>能</strong>过编，我去年 CSP 被坑过  <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="title">fun</span><span class="params">(<span class="type">int</span> arg, ...)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// do something...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><code>system(&quot;pause&quot;)</code> <del>不会 4202 年还有人在用这个吧</del></li><li>还有一堆特定于 Windows 和 GCC 4.9.x 的非标准库</li></ul><h2 id="NOI-Linux-的使用技巧"><a href="#NOI-Linux-的使用技巧" class="headerlink" title="NOI Linux 的使用技巧"></a>NOI Linux 的使用技巧</h2><h3 id="Linux-下的注意事项"><a href="#Linux-下的注意事项" class="headerlink" title="Linux 下的注意事项"></a>Linux 下的注意事项</h3><ul><li>路径使用 <code>/</code> (斜杠) 而不是 <code>\</code> (反斜杠)</li><li>以 <code>.</code> (点) 开头的文件会隐藏</li><li>大小写敏感 e.g. <code>abc.tXt</code> 与 <code>abc.txt</code> 是不同的文件</li><li>终端中不能使用 <code>Ctrl</code> + <code>C</code> 和 <code>Ctrl</code> + <code>V</code> 来复制粘贴，请使用 <code>Ctrl</code> + <code>Shift</code> + <code>C</code> 和 <code>Ctrl</code> + <code>Shift</code> + <code>V</code> （注意 <code>Ctrl</code> + <code>C</code> 是退出程序）</li><li>可执行文件没有 <code>.exe</code> 后缀名</li><li>运行程序需 <code>./【程序名】</code></li><li>Python 命令是 <code>python3</code></li></ul><h3 id="如何编写代码"><a href="#如何编写代码" class="headerlink" title="如何编写代码"></a>如何编写代码</h3><blockquote><p>如果使用 Code::Blocks，小齿轮按钮是编译，<strong>绿色</strong>小箭头是运行</p></blockquote><ul><li>IDE: Code::Blocks，强烈推荐，自带强大代码补全和调试（能调 STL）功能，比 Dev-C++ 好用 114514 倍<ul><li>注意事项：<ul><li>建议建 Project (File -&gt; New -&gt; Project -&gt; Console application) 以使用完整功能</li><li>默认终端是 XTerm，比较反人类（反正我至今没搞懂怎么复制粘贴），在 Settings -&gt; Environment 中将 Terminal to launch… 一项改为 gnome-terminal…</li><li>建议在 Debugger -&gt; GDB&#x2F;CDB Debugger: Default 中取消勾选 Disable startup scripts（默认勾选），以调试 STL</li></ul></li></ul></li><li>Editor:<ul><li>Geany: 编程体验类似 Dev-C++，有语法高亮和简单代码补全</li><li>gedit(中文名：文本编辑器)：有语法高亮，无代码补全</li><li>VSCode: <strong>没有插件</strong>，使用体验一般，功能同上</li><li>Sublime Text 3: 有简单代码补全（感觉不怎么好用）</li><li>Vim: 强大的命令行文本编辑器（不推荐新手使用）</li><li>Emacs: 同上，有 GUI，我不会用</li><li>nano: (终端命令 <code>nano</code>) 易于上手的命令行文本编辑器</li><li>JOE(Joe’s Own Editor): 命令行文本编辑器，不知道怎么用</li></ul></li></ul><h3 id="如何编译和运行代码"><a href="#如何编译和运行代码" class="headerlink" title="如何编译和运行代码"></a>如何编译和运行代码</h3><ul><li>在代码目录下右键「在终端打开」</li><li><code>g++ ./【程序文件名】.cpp -o 【程序文件名】 -std=c++14 -O2 -g</code> 编译代码</li><li><code>./【程序文件名】</code> 运行</li><li><code>time -p ./【程序文件名】</code> 可以查看程序运行时间（注意本机运行速度往往慢于 €€£ 少爷机，特别是在有虚拟机性能损耗的情况）</li></ul><h3 id="其他可能用上的命令"><a href="#其他可能用上的命令" class="headerlink" title="其他可能用上的命令"></a>其他可能用上的命令</h3><ul><li>Linux 的特定目录：<ul><li><code>.</code> 当前目录</li><li><code>..</code> 当前目录的父目录</li><li><code>~</code> 主目录（a.k.a. 主文件夹），你创建的所有文件都应该放在这个目录及其子目录下</li><li><code>/</code> 根目录，除非你知道你在干什么，否则不要动这个目录下的文件</li></ul></li><li><code>touch 【文件名】</code> 新建文件</li><li><code>mkdir 【目录名】</code> 新建目录</li><li><code>cd 【目录】</code> 切换当前目录</li><li><code>ls 【目录名】</code> 列出目录下文件，如果不给定目录名，则默认是当前目录，<code>ls -A</code> 列出所有文件，包含隐藏文件（注意：主目录下会有很多无关的隐藏文件）</li><li><code>rm 【文件名】</code> 删除文件，<code>rm -r 【目录名】</code> 删除目录</li><li><code>cp 【原路径/文件】 【目录路径/文件】</code> 复制文件</li><li><code>mv 【原路径/文件名】 【新路径/文件名】</code> 移动&#x2F;改名文件</li><li><code>diff 【文件A】 【文件B】</code> 比较文件 A 和文件 B 的差异</li><li><code>ps -e</code> 列出所有进程（和 PID）</li><li><code>kill 【PID】</code> 结束进程（PID 使用上面的命令查看）</li><li><code>killall 【进程名】</code> 结束进程</li><li>管道：<code>【程序A】 | 【程序B】</code> 将程序 A 的输出作为程序 B 的输入运行 A 和 B</li><li>文件输入输出重定向：<ul><li><code>【程序】 &gt; 【输出文件名】</code> 将输出写至文件</li><li><code>【程序】 &lt; 【输入文件】</code> 将文件作为输入运行程序</li><li>可以一块使用，如：<code>./prob &lt; prob.in &gt; prob.out</code></li></ul></li></ul><h2 id="其他可能用上的东西"><a href="#其他可能用上的东西" class="headerlink" title="其他可能用上的东西"></a>其他可能用上的东西</h2><h3 id="对拍脚本"><a href="#对拍脚本" class="headerlink" title="对拍脚本"></a>对拍脚本</h3><p>对拍代码模板（<code>prob</code> 是代码文件名和输入输出文件名，<code>gen.cpp</code> 是数据生成器，<code>bf.cpp</code> 是暴力程序）</p><p>使用方法：<code>bash ./chk.sh</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chk.sh</span></span><br><span class="line"><span class="built_in">read</span> n</span><br><span class="line">g++ ./prob.cpp -o prob -O2</span><br><span class="line">g++ ./bf.cpp -o bf -O2</span><br><span class="line">g++ ./gen.cpp -o gen -O2</span><br><span class="line"><span class="keyword">while</span> (( <span class="variable">$n</span>&gt;<span class="number">0</span> ))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    ./gen &gt; prob.in</span><br><span class="line">    <span class="comment"># 文件输入输出 ./gen</span></span><br><span class="line">    <span class="keyword">if</span> (( $?&gt;<span class="number">0</span> )) <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;Data Generate Fail&quot;</span></span><br><span class="line">        <span class="built_in">sleep</span> 1s</span><br><span class="line">        <span class="built_in">continue</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    ./prob &lt; prob.in &gt; prob.out</span><br><span class="line">    <span class="comment"># 以上是无文件输入输出的方法</span></span><br><span class="line">    <span class="comment"># 如果有文件输入输出则改成 ./prob</span></span><br><span class="line">    <span class="keyword">if</span> (( $?&gt;<span class="number">0</span> )) <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;Runtime Error&quot;</span></span><br><span class="line">        <span class="built_in">break</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    ./bf &lt; prob.in &gt; bf.out</span><br><span class="line">    <span class="comment"># 文件输入输出 ./bf</span></span><br><span class="line">    <span class="keyword">if</span> (( $?&gt;<span class="number">0</span> )) <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;BF Runtime Error&quot;</span></span><br><span class="line">        <span class="built_in">continue</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">if</span> diff prob.out bf.out; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;OK&quot;</span></span><br><span class="line">        <span class="built_in">rm</span> prob.in prob.out bf.out</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;WA&quot;</span></span><br><span class="line">        <span class="built_in">break</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">rm</span> prob bf gen</span><br></pre></td></tr></table></figure><p>简单版：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chk.sh</span></span><br><span class="line">g++ prob.cpp -o prob -O2</span><br><span class="line">g++ bf.cpp -o bf -O2</span><br><span class="line">g++ gen.cpp -o gen -O2</span><br><span class="line">n=1</span><br><span class="line"><span class="keyword">while</span> ((n &lt;= <span class="number">1000</span>))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    ./gen &gt; prob.in</span><br><span class="line">    ./prob &lt; prob.in &gt; prob.out</span><br><span class="line">    ./bf &lt; prob.in &gt; bf.out</span><br><span class="line">    <span class="comment"># 全部无文件输入输出，有文件输入输出则应删除所有输入输出重定向</span></span><br><span class="line">    <span class="keyword">if</span> diff prob.out bf.out;</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$n</span></span><br><span class="line">        <span class="built_in">let</span> <span class="string">&quot;n=n+1&quot;</span></span><br><span class="line">        <span class="built_in">continue</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;WA&quot;</span></span><br><span class="line">        <span class="built_in">break</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="GDB-的基本使用"><a href="#GDB-的基本使用" class="headerlink" title="GDB 的基本使用"></a>GDB 的基本使用</h3><blockquote><p>这块我也不熟，我知道的就这些了</p></blockquote><blockquote><p>P.S. 使用 Code::Blocks 可以愉快地调试</p></blockquote><p>GDB 是大部分 Linux 发行版中自带的 Debugger</p><ul><li><code>gdb 【程序名】</code> 进入 Debug 界面，注意编译时必须带上 <code>-g</code> 参数</li><li><code>l 【行数】</code> 列出给定行附近代码，如果不给定行数则</li><li><code>b 【行数或函数名】</code> 设置断点</li><li><code>r</code> 运行至断点，注意不要忘记输入</li><li><code>n</code> 下一行</li><li><code>p 【变量名】</code> 打印变量</li><li><code>disp 【变量名】</code> 设置变量在断点处始终显示</li></ul>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;前情提要：由于我是机房中为数不多的几个用过 NOI Linux 的人，zhub 让我写了本文以向大家分享 NOI Linux 使用技巧。&lt;/p&gt;
&lt;p&gt;&lt;del&gt;疑似是有点太详细了，我写的大部分东西 zhub 都讲了&lt;/del&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;首先声明一下，我不是 Linux 专家，对一些东西了解不多，只是分享一些 &lt;strong&gt;实用主义&lt;/strong&gt; 的技巧，请大佬轻喷&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;强烈建议场上把在 Windows 中写的程序在 NOI Linux 编译一遍，防止挂分&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="OI" scheme="https://zhangyaoan.github.io/tags/OI/"/>
    
    <category term="技术" scheme="https://zhangyaoan.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="Linux" scheme="https://zhangyaoan.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>CSP-S 2024 游记</title>
    <link href="https://zhangyaoan.github.io/2024/10/27/CSP-S-2024-summary/"/>
    <id>https://zhangyaoan.github.io/2024/10/27/CSP-S-2024-summary/</id>
    <published>2024-10-27T14:27:50.000Z</published>
    <updated>2024-12-07T11:05:45.987Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>CSP-S 2024 游记</p></blockquote><p>期望得分 $100 + 100 + 50 + 0 &#x3D; 250pts$</p><p><del>等待 CCF 下发代码中…</del> 今年 CCF 似乎没公开码，但是好消息是没挂分</p><p>2024&#x2F;12&#x2F;4 Upd: 拿到了 7 级蓝钩，没想到这竟是我 OI 生涯中的高光时刻</p><span id="more"></span><h2 id="T1"><a href="#T1" class="headerlink" title="T1"></a>T1</h2><p>30min 写了个贪心，直接跑过样例。曾经一度以为样例是经过特殊构造的，欲写对拍，由于暴力不好写，遂放弃。</p><p>期望得分：$100pts$</p><h2 id="T2"><a href="#T2" class="headerlink" title="T2"></a>T2</h2><p>先通过物理公式计算出每个车的超速区间，需分 $a &gt; 0$，$a &lt; 0$ 和 $a &#x3D; 0$ 三种情况讨论</p><p>再对 $p_i$ 离散化，并将上述区间映射到离散化的 $p$ 上，同时可以求出第一问的答案</p><p>然后第二问就转化为最少点覆盖区间问题，经典贪心，优先队列即可</p><p>$O(m \log m)$，过样例，期望得分 $100pts$</p><blockquote><p>似乎有不少人挂分，包括 k_Sword 和 NAPeach，为他们感到惋惜，希望他们能在 NOIP 中取得好成绩</p></blockquote><h2 id="T3"><a href="#T3" class="headerlink" title="T3"></a>T3</h2><p>30min 写了个 $50pts$ 显然 $O(n^2)$ DP</p><p>$f_{i, 0&#x2F;1, pre}$ 表示第 $i$ 位，染色为蓝或红，上一个与当前异色元素的下标为 $pre$ 的最大权值</p><p>对于 $f_{i, 0&#x2F;1, i - 1}$ 枚举上一位的 $pre$ 转移即可</p><p>写完只剩 30min 结束，蓝的优化，遂摆烂</p><blockquote><p>是 Copy CodeForces，CCF 烂完</p><p>后来听说正解是 $O(n)$ 的 DP，似乎式子还比较好推？</p><p>还可以 $O(n \log n)$ 的 DS 优化 DP，但是 jl 写的被卡常了</p></blockquote><h2 id="T4"><a href="#T4" class="headerlink" title="T4"></a>T4</h2><p>没写。</p><blockquote><p>是黑题。正解线性做法似乎很难想。听说有 $16pts$ 唐分，且 $72pts$ 很可做，可惜场上没开。</p><p>zzethld 说他场上想到了 $92pts$ 做法，%%%</p></blockquote><hr><blockquote><p>k_Sword: CSP-S 有 $372pts$ 的人机分</p></blockquote><p>SD 这次分数线 $195pts$，再创新高，题目质量可见一斑</p><p>QDEZ 似乎人均 $300pts+$，我太菜了 QwQ</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;CSP-S 2024 游记&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;期望得分 $100 + 100 + 50 + 0 &amp;#x3D; 250pts$&lt;/p&gt;
&lt;p&gt;&lt;del&gt;等待 CCF 下发代码中…&lt;/del&gt; 今年 CCF 似乎没公开码，但是好消息是没挂分&lt;/p&gt;
&lt;p&gt;2024&amp;#x2F;12&amp;#x2F;4 Upd: 拿到了 7 级蓝钩，没想到这竟是我 OI 生涯中的高光时刻&lt;/p&gt;</summary>
    
    
    
    
    <category term="OI" scheme="https://zhangyaoan.github.io/tags/OI/"/>
    
    <category term="游记" scheme="https://zhangyaoan.github.io/tags/%E6%B8%B8%E8%AE%B0/"/>
    
    <category term="CSP/NOIP" scheme="https://zhangyaoan.github.io/tags/CSP-NOIP/"/>
    
  </entry>
  
  <entry>
    <title>CCPC 2024 JN 打铁记</title>
    <link href="https://zhangyaoan.github.io/2024/10/27/CCPC-2024-JN/"/>
    <id>https://zhangyaoan.github.io/2024/10/27/CCPC-2024-JN/</id>
    <published>2024-10-27T06:23:18.000Z</published>
    <updated>2024-10-27T11:08:50.534Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>和 k_Sword 和 NAPeach 组队（QEFW_#kzn a.k.a. 企鹅访问坤）参加了 CCPC 2024 济南站，2AC 273 罚时，取得了 rk 313 &#x2F; 323 的好成绩，成功打铁</p><p>菜是原罪 QwQ</p></blockquote><span id="more"></span><h2 id="Day-x-x-0"><a href="#Day-x-x-0" class="headerlink" title="Day $x\ (x &lt; 0)$"></a>Day $x\ (x &lt; 0)$</h2><p>很早就发出的通知了，本来因为我太菜，不想参加的</p><p>QDEZ 运动会的前两天，我在走廊上遇见了 k_Sword 和 NAPeach，问我是否参加 CCPC，队名是 QEFW_#kzn（原来成员是 k_Sword, zzetheld, NAPeach，所以叫 <a href="https://mzh.moegirl.org.cn/Kizuna(CeVIO)">#kzn</a>，但是 zzethld 不去，于是拉我去），于是我立刻答应了</p><p>中文队名是在紧急的情况下 NAPeach 随便打的</p><p>听说 XCPC 系列比赛可以带纸质资料，打印了很多<del>没用的</del>东西，最后似乎只有大质数表用上了</p><h2 id="Day-1"><a href="#Day-1" class="headerlink" title="Day 1"></a>Day 1</h2><p>少女 CSP 中…</p><p>晚上 CSP-S 结束后乘火车去济南，其中在去车站的路上把晚饭的粥洒了，耽误了一些时间</p><p>火车上 NAPeach 在相邻车厢，路上一半时间在看 NAPeach 打东方（我是 STG 苦手 QWQ），一半时间在多多理财 <del>和我在 QDEZ 研学路上的一样</del></p><p>23:30 左右到达，和 k_Sword 拼房</p><h2 id="Day-2"><a href="#Day-2" class="headerlink" title="Day 2"></a>Day 2</h2><p>早上起的比较晚，发现 NAPeach 已经快到了</p><p>8:10 左右到达比赛场地，快速进行了签到。有袋子鼠标垫等纪念品，这不比 ￥560 的 CSP-S 强？</p><p>发现到太早了，zhub710 还没到，等到再次出去时，已经拍完照了，完美错过 QDEZ 拍照</p><p>8:45 开始进场。比赛电脑很好，是 Ubuntu 22.04，包含 Code::Blocks 和 VSCode 等 IDE，好评。</p><p>9:00 比赛正式开始，分工是 k_Sword 看 A-D，我 E-I，NAPeach J-M。</p><p>k_Sword 迅速发现 A 是签到题，20min 写了暴力 Hash，在喜提 3 发罚时后 AC，签到成功</p><p>我发现 F 似乎是组合数，感觉可做，写完后发现没过样例，手模发现思路假了，贡献我的第一个错解</p><p>NAPeach 发现 J 是签到题，于 11:53 一发 AC，这是我们本场第二个也是最后一个 AC 🤣</p><p>k_Sword 发现 B 似乎是大模拟，开始写 B 题，但是最终也没有写出</p><p>距离比赛结束大概还有一个小时左右，我想到了一种 I 题的构造方法（I 是构造题），经过讨论和 Hack，没有发现问题，遂写完。交一发， TLE。检查发现在递归中开 <code>vector</code> ，添加 <code>reserve</code> 和关流同步，然后 WA 了。检查发现没有写挂，释怀地似了。错解++</p><p>我们注意到 Python 自带 FFT 大整数，k_Sword 和 NAPeach 遂开始写 E，实际上是 k_Sword 简述思路，NAPeach 写 Python 代码。但是其分讨极其复杂，在贡献了 5 发罚时之后，最终仍没有写出来。</p><p>喜提 rk 313 QwQ 🙃</p><p>我似乎是全队最菜的啊，一个正解都没有贡献出来 QwQ</p><h4 id="讲评-题解"><a href="#讲评-题解" class="headerlink" title="讲评 &amp; 题解"></a>讲评 &amp; 题解</h4><p>A, J 确实是 Very Easy，B, I 是 Easy，E, F 是 Easy-mid <del>说明我们的开题策略没问题</del></p><p>B 是搜，k_Sword 没写递归，可能导致码量增大</p><p>I 我的思路和正解已经比较接近了，但是没有考虑根的选择对答案的影响</p><p>E 分讨有 7 种情况，k_Sword 和 NAPeach 只考虑了 6 种（但是实际上场切的人只有 48，还是比较恶心的）</p><p>F 正解就是枚举，NAPeach 已经想到了，但是我认为复杂度不对（实际上是对的，证明似乎比较繁琐）。NAPeach 注意力太强了 %%%</p><h3 id="总结-反思"><a href="#总结-反思" class="headerlink" title="总结 &amp; 反思"></a>总结 &amp; 反思</h3><ul><li>团队合作不足<blockquote><p>k_Sword: 我们中任何一个人单独写都不能只切两道题</p></blockquote></li><li>做题策略有误。实际上我们几乎是三人开三题，每人分别想自己的题，没有花时间帮助队友验证和改进思路，导致我们写了很多假正解，浪费了宝贵的电脑使用时间</li><li>电脑使用策略有误。实际上从 A 题之后，可能由于上述原因，我们每人都没有十足的把握，往往是在轮流使用电脑。特别是在最后一小时，k_Sword 和 NAPeach 在写 E，而我在写 I（实际上我几乎没有仔细分析 E 的各种情况），往往是我修改代码，测试发现不过之后就将电脑交给他们，之后再次轮换。这样看上去没问题，实际上则导致思路经常被打断，也不利于 Debug</li><li>菜是原罪</li></ul><p>总之这次 CCPC 虽然打了铁，但是总体上还是很欢乐的。在比赛中看到了自己的不足，也算是有所收获，希望能给未来参加 XCPC 积累一点经验吧（话说我未来还要打 XCPC 吗？ QwQ）</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;和 k_Sword 和 NAPeach 组队（QEFW_#kzn a.k.a. 企鹅访问坤）参加了 CCPC 2024 济南站，2AC 273 罚时，取得了 rk 313 &amp;#x2F; 323 的好成绩，成功打铁&lt;/p&gt;
&lt;p&gt;菜是原罪 QwQ&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="OI" scheme="https://zhangyaoan.github.io/tags/OI/"/>
    
    <category term="XCPC" scheme="https://zhangyaoan.github.io/tags/XCPC/"/>
    
    <category term="游记" scheme="https://zhangyaoan.github.io/tags/%E6%B8%B8%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>插入类 DP 学习笔记</title>
    <link href="https://zhangyaoan.github.io/2024/09/05/insert-dp/"/>
    <id>https://zhangyaoan.github.io/2024/09/05/insert-dp/</id>
    <published>2024-09-05T13:05:00.000Z</published>
    <updated>2024-11-23T02:48:42.267Z</updated>
    
    <content type="html"><![CDATA[<h3 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h3><ul><li>构造某个<strong>排列</strong>或求排列方案数</li><li>答案与函数图像的转折点有关</li><li>答案可以由块的合并得出，且上述对答案的影响可以在合并时计算</li></ul><h3 id="核心思想"><a href="#核心思想" class="headerlink" title="核心思想"></a>核心思想</h3><p>维护互不相关的块，在以一某种顺序加入新元素时进行对块的新增、合并、扩张，最终将所有块合并为一个，得到答案</p><p>用 $dp_{i, j}$ 表示已经加入 $i$ 个元素，划分为 $j$ 个块的情况</p><ul><li>新增: $dp_{i, j} \gets dp_{i - 1, j - 1}$</li><li>合并: $dp_{i, j} \gets dp_{i - 1, j + 1}$</li><li>扩张: $dp_{i, j} \gets dp_{i - 1, j}$</li></ul><span id="more"></span><p>TODO</p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;特征&quot;&gt;&lt;a href=&quot;#特征&quot; class=&quot;headerlink&quot; title=&quot;特征&quot;&gt;&lt;/a&gt;特征&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;构造某个&lt;strong&gt;排列&lt;/strong&gt;或求排列方案数&lt;/li&gt;
&lt;li&gt;答案与函数图像的转折点有关&lt;/li&gt;
&lt;li&gt;答案可以由块的合并得出，且上述对答案的影响可以在合并时计算&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;核心思想&quot;&gt;&lt;a href=&quot;#核心思想&quot; class=&quot;headerlink&quot; title=&quot;核心思想&quot;&gt;&lt;/a&gt;核心思想&lt;/h3&gt;&lt;p&gt;维护互不相关的块，在以一某种顺序加入新元素时进行对块的新增、合并、扩张，最终将所有块合并为一个，得到答案&lt;/p&gt;
&lt;p&gt;用 $dp_{i, j}$ 表示已经加入 $i$ 个元素，划分为 $j$ 个块的情况&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;新增: $dp_{i, j} &#92;gets dp_{i - 1, j - 1}$&lt;/li&gt;
&lt;li&gt;合并: $dp_{i, j} &#92;gets dp_{i - 1, j + 1}$&lt;/li&gt;
&lt;li&gt;扩张: $dp_{i, j} &#92;gets dp_{i - 1, j}$&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    
    <category term="OI" scheme="https://zhangyaoan.github.io/tags/OI/"/>
    
    <category term="笔记" scheme="https://zhangyaoan.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>暴力碾标算，$n^2$ 过十万 —— bitset 的妙用</title>
    <link href="https://zhangyaoan.github.io/2024/07/31/The-useage-of-bitset/"/>
    <id>https://zhangyaoan.github.io/2024/07/31/The-useage-of-bitset/</id>
    <published>2024-07-31T06:25:28.000Z</published>
    <updated>2024-11-30T12:47:23.987Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>在 $SDSC$ 从传奇 OIer $QLR$ 处学到的 <code>std::bitset</code> 的神奇用法，可以让你的暴力跑得飞快</p><p>TODO</p></blockquote><span id="more"></span><p>TODO</p><p>正在调试代码 $QwQ$</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;在 $SDSC$ 从传奇 OIer $QLR$ 处学到的 &lt;code&gt;std::bitset&lt;/code&gt; 的神奇用法，可以让你的暴力跑得飞快&lt;/p&gt;
&lt;p&gt;TODO&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="OI" scheme="https://zhangyaoan.github.io/tags/OI/"/>
    
    <category term="笔记" scheme="https://zhangyaoan.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Fedora 折腾记</title>
    <link href="https://zhangyaoan.github.io/2024/07/18/Fedora-tweaks/"/>
    <id>https://zhangyaoan.github.io/2024/07/18/Fedora-tweaks/</id>
    <published>2024-07-18T14:05:47.000Z</published>
    <updated>2025-09-21T03:40:39.797Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Fedora + Gnome 坑很多，这里是我在使用 Fedora 中遇到的一些坑和解决的方案</p><p>这其中的很多 bug 都具有一定的随机性（很多是我在 Google 上使用英文寻找了半天才找到同样的问题，有的甚至需要亲自向开发者反映）。<br>所以这仍然仅仅是个人记录，其中的解决方案仅供日后备查，不保证可用，请读者（如果有的话）谨慎辨析</p></blockquote><span id="more"></span><h2 id="分数缩放-fractional-scaling"><a href="#分数缩放-fractional-scaling" class="headerlink" title="分数缩放 (fractional scaling)"></a>分数缩放 (fractional scaling)</h2><p>Gnome 至今仍不正式支持分数缩放，仅有一个实验性功能提供了<strong>Wayland 应用程序</strong>的分数缩放（开启方法：<code>gsettings set org.gnome.mutter experimental-features &quot;[&#39;scale-monitor-framebuffer&#39;]&quot;</code>）</p><p><del>但是在这种情况下 Xwayland app 会变得非常模糊（包括著名的 <code>vlc</code>），这显然不是我们需要的</del></p><p><del>于是我们就需要安装 <code>taaem/mutter-xwayland-fractional-scaling</code> COPR 中 Patch 过的 <code>mutter</code>（Patch 来源于 <code>mutter</code> 的一个尚未 merge 的 PR），根据<a href="https://copr.fedorainfracloud.org/coprs/taaem/mutter-xwayland-fractional-scaling/">COPR的描述</a>就可以了</del></p><blockquote><p>2024&#x2F;11&#x2F;3 Updated: 该 MR 已经正式合并进 mutter 47，包含于最近发布的 Fedora 41，不再需要该 COPR，直接 <code>gsettings set org.gnome.mutter experimental-features &quot;[&#39;scale-monitor-framebuffer&#39;, &#39;xwayland-native-scaling&#39;]&quot;</code> 启用该功能即可</p></blockquote><h3 id="仍然存在的问题"><a href="#仍然存在的问题" class="headerlink" title="仍然存在的问题"></a>仍然存在的问题</h3><p>实际上，Gnome 至今都不支持<strong>真正的</strong>分数缩放，目前的分数缩放其实是先将显示器分辨率拉伸，以200%渲染后再缩小（P.S. GTK4 似乎正在支持真·分数缩放），这不仅会导致 GPU 资源的浪费，还会使<code>virt-manager</code> <code>gnome-box</code> 等需要像素对齐的应用程序出现问题（如 <code>virt-manager</code> 中的虚拟机分辨率过高等）</p><p><code>xwayland-native-scaling</code> feature 也存在同样的问题（这似乎与 KDE 上同样功能的行为不同），这导致我在 <code>wine</code> 上运行的游戏以3072×1728的分辨率渲染（1920×1080，125%缩放），而且导致某些比较老旧游戏由于窗口过小而完全不能玩（例如东方几乎全系列）</p><p><img src="/2024/07/18/Fedora-tweaks/touhou.png" alt="th08"></p><blockquote><p><del>Upd: 找到了一种解决方法：</del></p><p><del>安装 <code>gamescope</code> ，使用 <code>gamescope -W 800 -H 600 -F fsr wine [东方游戏文件名]</code> 运行游戏即可</del></p><p><del>上述方案会使用 AMD 的 FSR 拉伸游戏分辨率，如果想要保持原有的像素风格，可以使用 <code>-F nearest</code> 选项（话说东方是像素风游戏吗？）</del></p><p><img src="/2024/07/18/Fedora-tweaks/touhou-with-gamescope.png" alt="th08-with-gamescope"></p><blockquote><p>2024&#x2F;11&#x2F;3 Upd: 以上解决方案失效</p><p><code>gamescope</code> 3.14.2 以上版本添加了 Wayland 支持，但是存在问题，直接导致游戏崩溃。对于 Fedora 40 可以使用 <code>dnf downgrade gamescope</code> 来降级至 <code>3.14.2</code> 版本，但是在 Fedora 41 上不可用。可以尝试自行编译安装旧版本（反正我这由于依赖问题编译失败了）</p></blockquote><blockquote><p>2025&#x2F;7 Upd: 解决方案：<code>wine</code> 10.x 原生支持 Wayland，可让 wine 直接运行在 Wayland 下，参见<a href="#Wayland-HiDPI">下文</a></p></blockquote></blockquote><h2 id="美化"><a href="#美化" class="headerlink" title="美化"></a>美化</h2><p>确切的说其实不是美化，只是让系统的 UI 更加统一</p><h3 id="Gtk3-主题"><a href="#Gtk3-主题" class="headerlink" title="Gtk3 主题"></a>Gtk3 主题</h3><p><code>adw-gtk3-theme</code></p><h3 id="图标主题"><a href="#图标主题" class="headerlink" title="图标主题"></a>图标主题</h3><p><code>papirus-icon-theme</code>, <code>papirus-icon-theme-dark</code></p><h3 id="Qt-应用程序"><a href="#Qt-应用程序" class="headerlink" title="Qt 应用程序"></a>Qt 应用程序</h3><p>使用 <code>qt5ct</code> <code>qt6ct</code> 加上 <code>kvantum</code> 配合 <del><a href="https://github.com/vinceliuice/Colloid-kde"><code>Colloid-kde</code></a> 主题（一个很像 Libadwaita 的 Kvantum Qt 主题，虽然很多 UI 元素的样式不同，但是整体风格很搭）</del>（2025&#x2F;9 Upd: 用 <a href="https://github.com/GabePoel/KvLibadwaita">KvLibdwaita</a> 更好）</p><ul><li><del>为什么不用 <code>KvLibdwaita</code>：这个主题目前的版本存在很大的问题，行编辑器和下拉框的颜色和窗口背景颜色完全相同，导致了很多应用程序不可用</del><ul><li>2025&#x2F;9 Upd: 问题已经修复</li></ul></li><li>为什么不用 <code>QGnomePlatform</code>：首先这个项目已经不再开发也没有适配 Libadwaita 主题，仍然需要自己搞主题；而且会导致其他问题</li></ul><h4 id="字体问题"><a href="#字体问题" class="headerlink" title="字体问题"></a>字体问题</h4><p>所有 Qt 应用程序中应该上粗体字的地方字体字重都过大，导致文本（尤其是中文文本）几乎不可读</p><p><img src="/2024/07/18/Fedora-tweaks/bold-text.png" alt="bold-text"></p><p>经调查，发现这似乎是 Cantarell 字体（Gnome的默认字体）的问题，与可变字重（VF）有关，而且是2020年就出现的老bug（似乎是由于不能在所有情况下都能复现而没有修复，不知道为什么我碰上了），当时的解决方案是更换系统字体。然而我经过测试，Noto CJK 似乎也存在同样问题，无奈之下只能使用上古字体文泉驿微米黑（正黑也行，但是太丑）</p><p>这时就需要祭出 <code>qt5ct</code> 和 <code>qt6ct</code> 了，如果使用默认的 <code>qgnomeplatform</code> 则不能单独更改 Qt 应用程序的字体（将文泉驿应用为系统默认字体也不是不行，但是我觉得很丑）</p><p>编辑 <code>~\.config\environment.d\qt.conf</code> 并修改 <code>qt5ct</code> 和 <code>qt6ct</code> 中的字体设置后，重启就可以了</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># QT_QPA_PLATFORMTHEME=&#x27;gnome&#x27; # 需要更改全局字体</span></span><br><span class="line"><span class="comment"># QT_STYLE_OVERRIDE=kvantum</span></span><br><span class="line"><span class="attr">QT_QPA_PLATFORMTHEME</span>=qt5ct</span><br><span class="line"><span class="attr">XCURSOR_THEME</span>=YOUR_CURSOR_THEME_NAME</span><br><span class="line"><span class="comment"># 更改 Qt6 应用程序的光标主题（如果有），默认情况下 Qt6 应用程序的光标是极丑的系统默认光标</span></span><br></pre></td></tr></table></figure><h3 id="窗口圆角"><a href="#窗口圆角" class="headerlink" title="窗口圆角"></a>窗口圆角</h3><p>可以使用<a href="https://github.com/flexagoon/rounded-window-corners.git">这个</a>扩展</p><p>但是似乎有不少bug</p><h2 id="Wine"><a href="#Wine" class="headerlink" title="Wine"></a>Wine</h2><h3 id="字体设置"><a href="#字体设置" class="headerlink" title="字体设置"></a>字体设置</h3><p>默认的字体有概率出现问题，可以使用文泉驿字体（安装 <code>wqy-microhei.ttc</code>，然后导入以下注册表）</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">REGEDIT4</span><br><span class="line"></span><br><span class="line"><span class="section">[HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\FontLink\SystemLink]</span></span><br><span class="line"><span class="attr">&quot;Lucida Sans Unicode&quot;</span>=<span class="string">&quot;wqy-microhei.ttc&quot;</span></span><br><span class="line"><span class="attr">&quot;Microsoft Sans Serif&quot;</span>=<span class="string">&quot;wqy-microhei.ttc&quot;</span></span><br><span class="line"><span class="attr">&quot;MS Sans Serif&quot;</span>=<span class="string">&quot;wqy-microhei.ttc&quot;</span></span><br><span class="line"><span class="attr">&quot;Tahoma&quot;</span>=<span class="string">&quot;wqy-microhei.ttc&quot;</span></span><br><span class="line"><span class="attr">&quot;Tahoma Bold&quot;</span>=<span class="string">&quot;wqy-microhei.ttc&quot;</span></span><br><span class="line"><span class="attr">&quot;SimSun&quot;</span>=<span class="string">&quot;wqy-microhei.ttc&quot;</span></span><br><span class="line"><span class="attr">&quot;Arial&quot;</span>=<span class="string">&quot;wqy-microhei.ttc&quot;</span></span><br><span class="line"><span class="attr">&quot;Arial Black&quot;</span>=<span class="string">&quot;wqy-microhei.ttc&quot;</span></span><br></pre></td></tr></table></figure><p>字体平滑（执行以下脚本并按照提示选择）</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment"># Quick and dirty script for configuring wine font smoothing</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Author: Igor Tarasov &lt;tarasov.igor@gmail.com&gt;</span></span><br><span class="line"></span><br><span class="line">WINE=<span class="variable">$&#123;WINE:-wine&#125;</span></span><br><span class="line">WINEPREFIX=<span class="variable">$&#123;WINEPREFIX:-<span class="variable">$HOME</span>/.wine&#125;</span></span><br><span class="line">DIALOG=whiptail</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ ! -x <span class="string">&quot;`which &quot;</span><span class="variable">$WINE</span><span class="string">&quot;`&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Wine was not found. Is it really installed? (<span class="variable">$WINE</span>)&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ ! -x <span class="string">&quot;`which &quot;</span><span class="variable">$DIALOG</span><span class="string">&quot;`&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    DIALOG=dialog</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">TMPFILE=`<span class="built_in">mktemp</span>` || <span class="built_in">exit</span> 1</span><br><span class="line"></span><br><span class="line"><span class="variable">$DIALOG</span> --menu \</span><br><span class="line">    <span class="string">&quot;Please select font smoothing mode for wine programs:&quot;</span> 13 51\</span><br><span class="line">    4\</span><br><span class="line">        1 <span class="string">&quot;Smoothing disabled&quot;</span>\</span><br><span class="line">        2 <span class="string">&quot;Grayscale smoothing&quot;</span>\</span><br><span class="line">        3 <span class="string">&quot;Subpixel smoothing (ClearType) RGB&quot;</span>\</span><br><span class="line">        4 <span class="string">&quot;Subpixel smoothing (ClearType) BGR&quot;</span> 2&gt; <span class="variable">$TMPFILE</span></span><br><span class="line"></span><br><span class="line">STATUS=$?</span><br><span class="line">ANSWER=`<span class="built_in">cat</span> <span class="variable">$TMPFILE</span>`</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$STATUS</span> != 0 ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">rm</span> -f <span class="variable">$TMPFILE</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">MODE=0 <span class="comment"># 0 = disabled; 2 = enabled</span></span><br><span class="line">TYPE=0 <span class="comment"># 1 = regular;  2 = subpixel</span></span><br><span class="line">ORIENTATION=1 <span class="comment"># 0 = BGR; 1 = RGB</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$ANSWER</span> <span class="keyword">in</span></span><br><span class="line">    1) <span class="comment"># disable</span></span><br><span class="line">        ;;</span><br><span class="line">    2) <span class="comment"># enable</span></span><br><span class="line">        MODE=2</span><br><span class="line">        TYPE=1</span><br><span class="line">        ;;</span><br><span class="line">    3) <span class="comment"># enable cleartype rgb</span></span><br><span class="line">        MODE=2</span><br><span class="line">        TYPE=2</span><br><span class="line">        ;;</span><br><span class="line">    4) <span class="comment"># enable cleartype bgr</span></span><br><span class="line">        MODE=2</span><br><span class="line">        TYPE=2</span><br><span class="line">        ORIENTATION=0</span><br><span class="line">        ;;</span><br><span class="line">    *)</span><br><span class="line">        <span class="built_in">rm</span> -f <span class="variable">$TMPFILE</span></span><br><span class="line">        <span class="built_in">echo</span> Unexpected option: <span class="variable">$ANSWER</span></span><br><span class="line">        <span class="built_in">exit</span> 1</span><br><span class="line">        ;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;REGEDIT4</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[HKEY_CURRENT_USER\Control Panel\Desktop]</span></span><br><span class="line"><span class="string">\&quot;FontSmoothing\&quot;=\&quot;<span class="variable">$MODE</span>\&quot;</span></span><br><span class="line"><span class="string">\&quot;FontSmoothingOrientation\&quot;=dword:0000000<span class="variable">$ORIENTATION</span></span></span><br><span class="line"><span class="string">\&quot;FontSmoothingType\&quot;=dword:0000000<span class="variable">$TYPE</span></span></span><br><span class="line"><span class="string">\&quot;FontSmoothingGamma\&quot;=dword:00000578&quot;</span> &gt; <span class="variable">$TMPFILE</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> -n <span class="string">&quot;Updating configuration... &quot;</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$WINE</span> regedit <span class="variable">$TMPFILE</span> 2&gt; /dev/null</span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -f <span class="variable">$TMPFILE</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> ok</span><br></pre></td></tr></table></figure><h3 id="Wayland-HiDPI"><a href="#Wayland-HiDPI" class="headerlink" title="Wayland HiDPI"></a>Wayland HiDPI</h3><p>要启用 Wayland 支持，需要 <code>DISPLAY</code> 环境变量为空（不建议设置系统环境变量，会出现问题）</p><p>e.g.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">env</span> -u DISPLAY wine your_program.exe</span><br></pre></td></tr></table></figure><p>wine 10.x 原生支持 HiDPI，只需要在设置中将 DPI 更改为符合系统的值即可</p><p>默认会拉伸不支持 HiDPI 的应用（包括大部分游戏），关闭需导入以下注册表</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">REGEDIT4</span><br><span class="line"></span><br><span class="line"><span class="section">[HKEY_CURRENT_USER\Software\Microsoft\Windows NT\CurrentVersion\AppCompatFlags\Layers]</span></span><br><span class="line">@=&quot;~ HIGHDPIAWARE&quot;</span><br></pre></td></tr></table></figure><h2 id="杂项"><a href="#杂项" class="headerlink" title="杂项"></a>杂项</h2><p><del>VScode 貌似默认使用 XWayland，可以启用实验性功能来支持 Wayland，但是在我这输入法没法用（XWayland 下候选框会到处乱飘，但是能用）</del></p><p><del>似乎有人已经解决了这个问题，但是在我这里没有成功</del></p><blockquote><p>2024&#x2F;11&#x2F;3 Upd: 上文提到的 MR（已合并）已经解决这一问题</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Fedora + Gnome 坑很多，这里是我在使用 Fedora 中遇到的一些坑和解决的方案&lt;/p&gt;
&lt;p&gt;这其中的很多 bug 都具有一定的随机性（很多是我在 Google 上使用英文寻找了半天才找到同样的问题，有的甚至需要亲自向开发者反映）。&lt;br&gt;所以这仍然仅仅是个人记录，其中的解决方案仅供日后备查，不保证可用，请读者（如果有的话）谨慎辨析&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="技术" scheme="https://zhangyaoan.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="Linux" scheme="https://zhangyaoan.github.io/tags/Linux/"/>
    
    <category term="Fedora" scheme="https://zhangyaoan.github.io/tags/Fedora/"/>
    
    <category term="颓废" scheme="https://zhangyaoan.github.io/tags/%E9%A2%93%E5%BA%9F/"/>
    
  </entry>
  
  <entry>
    <title>Fedora Linux 中的实用软件</title>
    <link href="https://zhangyaoan.github.io/2024/07/18/Fedora-useful-software/"/>
    <id>https://zhangyaoan.github.io/2024/07/18/Fedora-useful-software/</id>
    <published>2024-07-18T13:05:44.000Z</published>
    <updated>2025-09-21T04:05:19.675Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>最近将电脑系统换成了 Fedora Linux，由于版权和其他的一些原因，Fedora 官方仓库似乎缺乏不少软件，某些软件安装似乎不是很容易。在此记录一下我在 Fedora 中常用的软件</p><p>仅作个人备份，以供日后查询，不能保证其中内容的可用性</p></blockquote><span id="more"></span><h2 id="Fedora-COPRs-第三方软件源"><a href="#Fedora-COPRs-第三方软件源" class="headerlink" title="Fedora COPRs &amp; 第三方软件源"></a>Fedora COPRs &amp; 第三方软件源</h2><ol><li>RPM Fusion: <code>yum install --nogpgcheck https://mirrors.tuna.tsinghua.edu.cn/rpmfusion/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm</code> 包含 Fedora 官方不愿意发布的软件，例如 <code>VirtualBox</code> 和后面提到的硬件编解码器</li><li><del><code>taaem/mutter-xwayland-fractional-scaling</code> <a href="https://copr.fedorainfracloud.org/coprs/taaem/mutter-xwayland-fractional-scaling/">使用方法</a> 启用 mutter 尚未 merge 的 PR 中对 XWayland 原生缩放的支持</del> Gnome 47 已原生支持</li><li><del><code>umutd3401/extension-manager</code> 包含 <code>extension-manager</code></del> Fedora 41 已失效</li><li><code>peterwu/rendezvous</code> 中的 <code>bibata-cursor-themes</code></li><li>VSCodium: 从官方网站中添加</li><li><code>zeno/scrcpy</code> 中的 <code>scrcpy</code></li></ol><h2 id="Gnome-Shell-扩展"><a href="#Gnome-Shell-扩展" class="headerlink" title="Gnome Shell 扩展"></a>Gnome Shell 扩展</h2><ul><li>User Themes</li><li>Blur my Shell: gnome shell 模糊效果</li><li>Dash to Dock: Dock</li><li>Removable Driver Menu: 顶栏上的可移动设备菜单</li><li>Resource Monitor: 查看 CPU 温度和占用率等</li><li>Vitals: 系统监视器，比 Resource Monitor 功能更为强大</li><li>GSConnect: KDE Connect 的 Gnome 实现 | 如果装上之后不能用，请务必检查是否安装 <code>openssl</code></li><li>Caffine: 阻止自动息屏的工具</li><li>Color Picker: 屏幕取色器</li><li>Clipboard Indicator: 剪切板管理</li><li><del>DM Theme Changer: 暗色模式增强，原生暗色模式仅支持 libadwaita app</del>（Gnome 48 失效）<ul><li>替代：Accent icons theme + Accent gtk theme + Accent user themes + Light&#x2F;Dark cursor theme</li></ul></li><li>Poxy Switcher: 快速设置中的代理切换按钮</li><li>User Avatar In Quick Settings: 快速设置中的头像，装饰用</li><li>ddterm: 下拉式终端</li><li>Coverflow Alt-Tab: 花里胡哨的特效</li><li>Alphabetical App Grid: 按字母顺序排列App，Gnome 原生排列方式很混乱</li><li>Round Windows Corner Reborn: 全局窗口圆角，似乎有较多 bug</li><li><del>Quick Setting Tweaker</del>: 快速设置调整，Gnome 47 已失效</li><li>Just Perfection: 各种奇怪的设置</li></ul><h2 id="视频播放"><a href="#视频播放" class="headerlink" title="视频播放"></a>视频播放</h2><p>播放器：<code>vlc</code> 或 <code>celluloid</code> 或 <code>mpv</code> （仅限CLI）</p><p>需要从 RPM Fusion 中安装 <code>ffmpeg</code> 来获取 H.264 编解码器</p><h3 id="H-264硬件解码"><a href="#H-264硬件解码" class="headerlink" title="H.264硬件解码"></a>H.264硬件解码</h3><p>从 RPM Fusion 中安装 <code>ffmpeg</code>, <code>libavcodec-freeworld</code>, <code>mesa-va-drivers-freeworld</code> 和 <code>mesa-vdpau-drivers-freeworld</code></p><p>如果提示存在冲突等原因无法安装，可以尝试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> dnf swap mesa-va-drivers mesa-va-drivers-freeworld</span><br><span class="line"><span class="built_in">sudo</span> dnf swap mesa-vdpau-drivers mesa-vdpau-drivers-freeworld</span><br></pre></td></tr></table></figure><h2 id="音频播放"><a href="#音频播放" class="headerlink" title="音频播放"></a>音频播放</h2><p><code>qmmp</code> 一个强大的播放器，基于 Qt，支持 <code>.cue</code> 文件</p><p><code>g4music</code> 也不错，但是不支持 <code>.cue</code> 文件</p><h2 id="电子邮件"><a href="#电子邮件" class="headerlink" title="电子邮件"></a>电子邮件</h2><p><code>thunderbird</code> 类似 Firefox，功能强大</p><p><code>geary</code> 比较轻量</p><h2 id="画图"><a href="#画图" class="headerlink" title="画图"></a>画图</h2><p><code>drawing</code></p><p><code>kolourpaint</code> KDE 的画图软件</p><p>Pinta，Flatpak 版本（<code>com.github.PintaProject.Pinta</code>）</p><h2 id="电子书"><a href="#电子书" class="headerlink" title="电子书"></a>电子书</h2><p><code>foliate</code> 与 Gnome 集成得很好，epub 支持较好</p><p><code>calibre</code> 著名电子书管理软件，自带阅读器，epub 支持极好</p><h2 id="系统"><a href="#系统" class="headerlink" title="系统"></a>系统</h2><p><code>htop</code> 系统监视器</p><p><code>nvtop</code> GPU 资源监视器</p><p><a href="https://github.com/edisionnano/QDiskInfo">QDiskInfo</a> Linux 上的 CrystalDiskInfo</p><p><code>flatseal</code> Flatpak 权限管理器</p><h2 id="杂项"><a href="#杂项" class="headerlink" title="杂项"></a>杂项</h2><p><code>lukenukem/asus-linux</code> ASUS-Linux 项目，旨在为华硕笔记本（主要是ROG）提供 Linux 驱动支持（完全开源），在我的电脑上目前支持的功能是电池充电限制</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;最近将电脑系统换成了 Fedora Linux，由于版权和其他的一些原因，Fedora 官方仓库似乎缺乏不少软件，某些软件安装似乎不是很容易。在此记录一下我在 Fedora 中常用的软件&lt;/p&gt;
&lt;p&gt;仅作个人备份，以供日后查询，不能保证其中内容的可用性&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="技术" scheme="https://zhangyaoan.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="Linux" scheme="https://zhangyaoan.github.io/tags/Linux/"/>
    
    <category term="Fedora" scheme="https://zhangyaoan.github.io/tags/Fedora/"/>
    
    <category term="颓废" scheme="https://zhangyaoan.github.io/tags/%E9%A2%93%E5%BA%9F/"/>
    
  </entry>
  
  <entry>
    <title>WSL 折腾记</title>
    <link href="https://zhangyaoan.github.io/2024/05/25/WSL-configure/"/>
    <id>https://zhangyaoan.github.io/2024/05/25/WSL-configure/</id>
    <published>2024-05-25T15:12:39.000Z</published>
    <updated>2024-11-30T12:47:44.312Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>折腾 WSL（<del>颓废</del>）的一点记录，其中前面的一部分是很久以前写的，从 OneNote 中提取出来的。当时一时兴起，折腾的是 ArchLinux，但是后来很快就发现 ArchLinux 的坑太多，也没有官方支持，而且滚动更新不太适合和 WSL 搭配使用（我可不想每次打开电脑第一件事就是 <code>pacman -Syu</code>，还要时不时处理滚挂的情况）</p><p>目前在用 Debian，比 ArchLinux 稳定多了，但是仍然没有官方支持（好像是？）</p><p>最近又开始捣鼓 GUI，又遇到了很多坑，填了一些，但是还要一些实在是搞不定。目前打算弃坑 Debian，换回又官方支持的 Ubuntu</p></blockquote><span id="more"></span><h2 id="WSL安装位置的移动"><a href="#WSL安装位置的移动" class="headerlink" title="WSL安装位置的移动"></a>WSL安装位置的移动</h2><pre><code>1. `wsl --export [发行版名] [输出目录]\[发行版名].tar` 导出当前发行版2. `wsl --unregister [发行版名]` 删除当前发行版3. `wsl --import [发行版名] [安装目录] [输出目录]\[发行版名].tar --version 2` 重新导入发行版4. `[发行版名].exe config --default-user[用户名]` 设置默认用户名为之前安装时的用户名（否则默认以root用户登录）5. 删除导出的 `.tar` 文件（可选）</code></pre><h2 id="yay安装与使用的问题"><a href="#yay安装与使用的问题" class="headerlink" title="yay安装与使用的问题"></a>yay安装与使用的问题</h2><pre><code>6. 换源：在 `/etc/pacman.d/mirrorlist` 顶端添加 `Server = [htt](https://mirrors.tuna.tsinghua.edu.cn/archlinux/$repo/os/$arch) ps://mirrors.tuna.tsinghua.edu.cn/archlinux/$repo/os/$arch`7. 添加 archlinuxcn 源：在 `/etc/pacman.conf` 底部添加<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[archlinuxcn]</span></span><br><span class="line"></span><br><span class="line"><span class="attr">SigLevel</span> = Optional TrustAll</span><br><span class="line"></span><br><span class="line"><span class="attr">Server</span> = https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/<span class="variable">$arch</span></span><br></pre></td></tr></table></figure>8. 安装 yay：`sudo pacman -S yay`9. EX: `database already registered` 问题：将 archlinuxcn 源添加至错误的文件10. EX: 找不到 yay 包：没有添加 archlinuxcn 源</code></pre><blockquote><p>P.S. WSL 似乎不适合与 ArchLinux 这种激进的滚动发行版搭配使用，已弃坑</p></blockquote><hr><p>以下均在 Debian 环境下</p><h2 id="GUI-问题"><a href="#GUI-问题" class="headerlink" title="GUI 问题"></a>GUI 问题</h2><h3 id="1-花屏"><a href="#1-花屏" class="headerlink" title="1. 花屏"></a>1. 花屏</h3><p><img src="/2024/05/25/WSL-configure/error0.png"></p><p>原因可能是由于缺乏显卡驱动导致的</p><p>解决方案：<code>sudo apt install mesa-utils</code></p><p>但是这个方案似乎不治本（也有可能根本没解决问题），安装完一段时间内这个问题确实解决了。但是在写本文时它又复发了，暂时无解。</p><h3 id="2-GUI-应用程序的语言问题"><a href="#2-GUI-应用程序的语言问题" class="headerlink" title="2. GUI 应用程序的语言问题"></a>2. GUI 应用程序的语言问题</h3><p>WSL默认语言为全英文，在终端操作确实很好用，但是使用 GUI 程序时就有些不爽了。</p><p>解决方案I: 更改全局 locale: <code>sudo dpkg-reconfigure locales</code>，按照 TUI 界面操作就可以了（注意第一步按空格键选择）</p><p>解决方案II: 设置 <code>~/.profile</code>: 还是 <code>sudo dpkg-reconfigure locales</code>，生成 <code>zh_CN.UTF-8</code> 的 locale（默认是没有的），然后再 <code>~/.profile</code> 中插入 <code>export LANG = zh_CN.UTF-8</code>（如果是更改 <code>.bashrc</code> 从Windows开始菜单运行的程序不会生效，猜测是由于从开始菜单运行时不经过bash）</p><h3 id="3-HiDPI-缩放问题"><a href="#3-HiDPI-缩放问题" class="headerlink" title="3. HiDPI 缩放问题"></a>3. HiDPI 缩放问题</h3><p>GTK 程序默认似乎是没有问题的，问题在于 Qt</p><p>解决方案: 编辑<code>~/.profile</code>: </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> QT_QPA_PLATFORM=<span class="string">&quot;wayland&quot;</span></span><br><span class="line"><span class="built_in">export</span> QT_AUTO_SCREEN_SCALE_FACTOR=0</span><br><span class="line"><span class="built_in">export</span> QT_ENABLE_HIGHDPI_SCALING=0</span><br><span class="line"><span class="built_in">export</span> QT_SCALE_FACTOR=1.25</span><br></pre></td></tr></table></figure><p>对于 Qt5 应用程序，就完美地解决了问题，但是 Qt6 程序似乎会缩放地过大，暂时无解</p><h3 id="4-Qt-应用程序主题问题"><a href="#4-Qt-应用程序主题问题" class="headerlink" title="4. Qt 应用程序主题问题"></a>4. Qt 应用程序主题问题</h3><p>安装 <code>qt5ct qt6ct</code> 和需要的主题，编辑 <code>.profile</code>: <code>export QT_QPA_PLATFORMTHEME=qt5ct</code></p><h3 id="存在的问题"><a href="#存在的问题" class="headerlink" title="存在的问题"></a>存在的问题</h3><ol><li>花屏问题的复现</li><li>Qt6 缩放过大</li><li>Wayland 下 Qt 应用程序窗口边框不能缩放，且没有阴影（导致分辨不清窗口边缘）</li></ol>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;折腾 WSL（&lt;del&gt;颓废&lt;/del&gt;）的一点记录，其中前面的一部分是很久以前写的，从 OneNote 中提取出来的。当时一时兴起，折腾的是 ArchLinux，但是后来很快就发现 ArchLinux 的坑太多，也没有官方支持，而且滚动更新不太适合和 WSL 搭配使用（我可不想每次打开电脑第一件事就是 &lt;code&gt;pacman -Syu&lt;/code&gt;，还要时不时处理滚挂的情况）&lt;/p&gt;
&lt;p&gt;目前在用 Debian，比 ArchLinux 稳定多了，但是仍然没有官方支持（好像是？）&lt;/p&gt;
&lt;p&gt;最近又开始捣鼓 GUI，又遇到了很多坑，填了一些，但是还要一些实在是搞不定。目前打算弃坑 Debian，换回又官方支持的 Ubuntu&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="技术" scheme="https://zhangyaoan.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="Linux" scheme="https://zhangyaoan.github.io/tags/Linux/"/>
    
    <category term="颓废" scheme="https://zhangyaoan.github.io/tags/%E9%A2%93%E5%BA%9F/"/>
    
  </entry>
  
  <entry>
    <title>关于《末日时在做什么？有没有空？可以来拯救吗？》的一点杂感</title>
    <link href="https://zhangyaoan.github.io/2024/04/30/Thoughts-of-Sukasuak/"/>
    <id>https://zhangyaoan.github.io/2024/04/30/Thoughts-of-Sukasuak/</id>
    <published>2024-04-30T08:25:11.000Z</published>
    <updated>2024-11-23T11:27:17.159Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2024/04/30/Thoughts-of-Sukasuak/anime-shot-02.png"></p><blockquote><p>关于《末日时在做什么？有没有空？可以来拯救吗？》的一些<em>奇怪</em>的感想</p><p><del>理解为珂学论文也是可以的</del></p><p>内容比较中二，权且当作一个人发癫时的记录罢</p></blockquote><span id="more"></span><p>我这个人对待未来比较悲观（至少从疫情以后是这样的），所以作品中悲剧式的设定和淡淡的悲伤的氛围深深地吸引了我</p><p>有时，我也会有这样的感觉：</p><blockquote><p>这个世界正在崩坏，现在也不知何时就会消失的这种不安。现在确实存在在那里的东西，只要闭上眼睛，再次睁开时就会失去掉的不安。没准下一秒土地就会塌陷，自己就会掉进无底深渊的不安。       ————奈芙莲·卢可·印萨尼亚（$Nephren\ Ruq\ Insania$）</p></blockquote><p>或许在这一点上我和奈芙莲有点像罢（仅限这一点）</p><h2 id="从标题说起——对作品本身的理解"><a href="#从标题说起——对作品本身的理解" class="headerlink" title="从标题说起——对作品本身的理解"></a>从标题说起——对作品本身的理解</h2><p><img src="/2024/04/30/Thoughts-of-Sukasuak/anime-shot-01.png"></p><p>$$末日时在做什么？有没有空？可以来拯救吗？$$</p><p>「末日」是作品发生的背景，既包括500年前人类的末日（虽然在动画中几乎没有提到，小说中也没有花很多笔墨描写，但是我认为则仍然是整个作品的一条十分重要的线索），也包括现在浮空岛的末日</p><p>「拯救」则是作品的核心，在我看来，这包括三个方面：</p><ul><li>对世界的拯救：这是威廉、莉莉娅、全体黄金妖精等人的目标与使命，然而无论是在500年前的人类社会，还是现在的浮空岛，他们都无力拯救这一个注定灭亡的世界（人类 $Emnetwihts$ 数量的无限增加与星神灵魂碎片有限的矛盾，给人类判下了死刑；而浮空岛寿命的有限，则注定了浮空岛世界的毁灭）。为了一个自己明知不能达成的目标而奋斗，甚至献出生命，这无疑是一个莫大的悲剧</li><li>对自己所爱的人的拯救：「拯救」是威廉与珂朵莉爱情的核心。威廉听闻了珂朵莉等一众黄金妖精的悲惨的处境和命运，想要把她们从在战场上作为兵器牺牲的命运中拯救出来，让她们也能像普通人一样享受生活，这就是他作为一个挂名的军官，却仍然履行着本不属于自己自己的职责的原因，这就是他将自己的浑身解数倾囊相授的原因，这就是他在动画的结尾他牺牲自己救奈芙莲的原因，这更是他在结局时为了妖精仓库而祭献自身的原因；而对于珂朵莉，她的本质是星神艾露可（$Elq\ Hrqstn$）的梦，是成为莉莉娅（$Lillia$）的梦，所以说某种意义上珂朵莉是莉莉娅的复刻，而为拯救所爱的人而牺牲是她的使命，也是她存在的意义，因此她发誓要为威廉承担一切战斗，最终为了救威廉跳下飞空艇，这是她必然的选择。因此，他们之间的悲剧不仅仅是由于剧情的需要，更是人物的性格与设定导致的必然。有人说，珂朵莉与威廉的爱情悲剧是可以避免的，这种观点是我所不能赞同的。</li><li>对自己的拯救：威廉在到68号岛工作前，作为唯一幸存的人类，他失去了一切，由于自己（不祥的）「人类」的身份和对过去过多的怀念，他无法融入浮空岛的生活。是在妖精仓库的工作，使他将自己从颓废之中拯救出来，找出了生活的意义。同时，他与珂朵莉的爱情其实也是一种自我救赎，不仅仅是对新生活的探索，更是对自己在过去犯过的错误的弥补，因此他与珂朵莉立下生还的约定（他与爱尔梅莉亚 $Almaria\ Duffner$ 也立下了相同的约定，但是他没能遵守），因此他竭力拯救珂朵莉（他没有机会爱莉莉娅，也没能拯救她）。可以说，威廉与珂朵莉恋爱的目的在于使珂朵莉不要再成为莉莉娅，这正与珂朵莉复刻莉莉娅的使命相矛盾，这正是导致悲剧发生的原因之一</li></ul><p>在我看来，标题以一种轻松的疑问语气讨论「末日」本身，就体现了经历痛苦的抗争之后，最终明白末日的必然，接受末日之后的坦然之情吧。</p><p>与第二部的标题$末日时在做什么？能不能再见一面？$（我感觉它更加悲观，“能不能再见一面”暗示这永别）相比，还是显得更加乐观吧（虽然是另类的乐观）</p><blockquote><p>Note: 由于我没有看过第二部的小说，对其的了解仅限于 Wiki，所以叙述&#x2F;理解可能有一些不准确，请读者见谅</p></blockquote><h2 id="《末日三问》的现实意义"><a href="#《末日三问》的现实意义" class="headerlink" title="《末日三问》的现实意义"></a>《末日三问》的现实意义</h2><p><img src="/2024/04/30/Thoughts-of-Sukasuak/anime-shot-08.png"></p><p>作为一个 2024 年才入坑的人，我认为从现在的视角来看，《末日三问》有着特殊的现实意义</p><p>让我们回到 2014 年（小说发行）到 2017 年（动画上映）的这一段时间：这是一个整个世界仍然处于高速发展的时代，虽然社会上矛盾重重，但是高速的发展足以掩盖一切，国际上虽然充满争端与摩擦，但是都不足以让人联想到“世界大战”。更重要的是，人们对未来充满<strong>希望</strong>。虽然那时远远称不上乌托邦式的理想社会，但是与现在相比，也足以称得上是 good old days 了。</p><p>人类的生活需要危机感，在和平而充满希望的年代，人们迫切地需要一些东西来填充自己因为缺乏危机感日益空虚的心灵，于是各种文艺作品应运而生，其中「末日」题材的作品也不例外。</p><p>然而，在 2019 年秋季，那场突如其来的疫情打碎了人们心中的一切幻想。现在，疫情虽然过去了，但是疫情带来的创伤，却是永久性的。伴随着疫情而来的民族主义和贸易保护主义的浪潮，随同着因之而来的战争，至今仍笼罩着全球。疫情带来的经济下行，至今也没有恢复。之前由于高速发展而隐藏的科技进步停滞（近期似乎有所缓解？）、环境破坏等问题，随之显现……</p><p>疫情导致的经济破坏，几乎断绝了个体商户和小企业的生路，资本正在占领一切。经济的下行，加之资本剥削的加剧，进一步加剧了社会竞争压力的增大（导致了内卷）</p><p>在现实的压迫之下，人们的内心早已被现实的危机感填满，人们不再需要用文艺作品中虚假的危机感充实心灵，他们不想要在观看文艺作品时思考哲学问题，相反，他们需要麻醉剂，以给与自己不堪重负的内心以慰藉（或许和过去的宗教效果相似）。我以为，这大概就是现在的流行文艺作品逐渐失去其现实意义（包括动漫作品题材的单一化，在<a href="https://fiveyellowmice.com/zh/posts/2016/01/welcome-to-the-house-of-pies-how-anime-markets-itself.html">这篇文章</a>中有详细介绍）的原因之一，也正是《末日三问》等一系列「末日」题材的文艺作品日益式微的原因罢。</p><p>现在来看，或许《末日三问》中描写的人类（$Emnetwihts$）与浮空岛的末日，或许也象征着我们所处的世界灰暗的未来罢（世界末日什么的也许离我们很远罢 <del>如果考虑核战争，或许也不远</del>）</p><hr><p><img src="/2024/04/30/Thoughts-of-Sukasuak/anime-shot-12.png"></p><p>但是，即使未来注定是灰暗的，难道我们就应该因此放弃<strong>希望</strong>吗？</p><p>我们这一代人，或许既是幸运的，又是不幸的。生在一个美好的时代，但是或许在我们成年以前，就要目睹她逝去。但是，即使如此，少年时代的美好回忆，经过时间的洗涤，也会铭刻在我们心中，成为我们前进的动力。</p><p>即使现实再黑暗，我们也不能放弃心中的<strong>理想</strong>。我们要在黑暗中寻找光明！</p><p>如果未来不尽如人意，那么就让我们改造她吧！</p><p><strong>未来属于我们！</strong></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2024/04/30/Thoughts-of-Sukasuak/anime-shot-02.png&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;关于《末日时在做什么？有没有空？可以来拯救吗？》的一些&lt;em&gt;奇怪&lt;/em&gt;的感想&lt;/p&gt;
&lt;p&gt;&lt;del&gt;理解为珂学论文也是可以的&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;内容比较中二，权且当作一个人发癫时的记录罢&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="杂感" scheme="https://zhangyaoan.github.io/tags/%E6%9D%82%E6%84%9F/"/>
    
    <category term="生活" scheme="https://zhangyaoan.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
    <category term="颓废" scheme="https://zhangyaoan.github.io/tags/%E9%A2%93%E5%BA%9F/"/>
    
    <category term="珂学" scheme="https://zhangyaoan.github.io/tags/%E7%8F%82%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>计算几何学习笔记 II</title>
    <link href="https://zhangyaoan.github.io/2024/04/20/Geometry-Note-2/"/>
    <id>https://zhangyaoan.github.io/2024/04/20/Geometry-Note-2/</id>
    <published>2024-04-20T12:14:38.000Z</published>
    <updated>2024-04-26T12:09:58.367Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>计算几何学习笔记第二弹，主要包括算法部分</p><p>目前包含二维凸包(Todo)、旋转卡壳(Todo)、半平面交……</p><p>尚未完成 QwQ</p></blockquote><span id="more"></span><h2 id="凸包"><a href="#凸包" class="headerlink" title="凸包"></a>凸包</h2><p><del>然而并不是三维的</del></p><p>TODO</p><h2 id="旋转卡壳"><a href="#旋转卡壳" class="headerlink" title="旋转卡壳"></a>旋转卡壳</h2><p>TODO</p><h2 id="半平面交"><a href="#半平面交" class="headerlink" title="半平面交"></a>半平面交</h2><p>模板：<a href="https://www.luogu.com.cn/problem/P4196">luogu P4196</a></p><h3 id="半平面"><a href="#半平面" class="headerlink" title="半平面"></a>半平面</h3><p>一条直线将平面分成两个平面，称为半平面</p><p>可以使用直线表示半平面</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">HalfPlane</span></span><br><span class="line">&#123;</span><br><span class="line">    Point p;</span><br><span class="line">    Vector v;</span><br><span class="line">    <span class="type">double</span> ang;</span><br><span class="line">    <span class="built_in">HalfPlane</span>() &#123;&#125;;</span><br><span class="line">    <span class="built_in">HalfPlane</span>(Point _p, Vector _v) : <span class="built_in">p</span>(_p), <span class="built_in">v</span>(_v)</span><br><span class="line">    &#123;</span><br><span class="line">        ang = <span class="built_in">atan2</span>(v.y, v.x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">bool</span> <span class="keyword">operator</span>&lt; (<span class="type">const</span> HalfPlane &amp;l) <span class="type">const</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ang &lt; l.ang;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>与直线的表示不同，在半平面的表示中，需要使用点和方向表示直线（即<code>Point p</code>和<code>Vector v</code>，使用向量表示方向），并单独储存与水平面的夹角（用于排序）</p><p>这样表示之后，进行叉乘的运算时就可以直接使用<code>Vector v</code>运算，不用再做减法了</p><h3 id="求半平面交"><a href="#求半平面交" class="headerlink" title="求半平面交"></a>求半平面交</h3><p>将直线按斜率排序，依次入队</p><p>观察发现，每加入一条直线时，可能影响到队首也可能影响到队尾，所以需要使用双端队列维护</p><p>考虑每次插入直线的过程：</p><ol><li>当前交点在新加入直线的右侧，覆盖队首</li><li>队首交点在新加入直线右侧，覆盖队尾</li><li>当存在平行直线时，只保留最左侧的向量</li></ol><p>Code: TODO</p><h2 id="最小圆覆盖"><a href="#最小圆覆盖" class="headerlink" title="最小圆覆盖"></a>最小圆覆盖</h2><p><a href="https://www.luogu.com.cn/problem/P1742">link</a></p><p><del>可以用模拟退火过 QwQ</del></p><p>正解需要使用随机增量法 <del>怎么还是随机</del></p><p>暂时还没学会 QwQ</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;计算几何学习笔记第二弹，主要包括算法部分&lt;/p&gt;
&lt;p&gt;目前包含二维凸包(Todo)、旋转卡壳(Todo)、半平面交……&lt;/p&gt;
&lt;p&gt;尚未完成 QwQ&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="OI" scheme="https://zhangyaoan.github.io/tags/OI/"/>
    
    <category term="计算几何" scheme="https://zhangyaoan.github.io/tags/%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95/"/>
    
    <category term="笔记" scheme="https://zhangyaoan.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 博客折腾记</title>
    <link href="https://zhangyaoan.github.io/2024/04/14/Blog-build/"/>
    <id>https://zhangyaoan.github.io/2024/04/14/Blog-build/</id>
    <published>2024-04-14T02:56:46.000Z</published>
    <updated>2025-07-11T09:57:42.407Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>这个博客的搭建过程</p><p>基于 GithubPages + Hexo + NexT theme</p><p>包括博客的搭建过程和 NexT 主题的配置与美化，特别的，包含支持<strong>暗色模式</strong>的可爱<strong>背景图片</strong>设置</p></blockquote><span id="more"></span><h2 id="安装环境-配置"><a href="#安装环境-配置" class="headerlink" title="安装环境&amp;配置"></a>安装环境&amp;配置</h2><p>安装 Git，建议使用 <a href="https://git-scm.com/download/win">Git for Windows</a>（即使已经安装了 MSYS2），因为 MSYS2 中的 git 似乎有奇怪的兼容问题，而且如果想在 Windows 的终端中使用 git，就必须将 msys 自身的环境（不是 MinGW）暴露在 Windows 下，会与许多 Windows 自带的命令冲突（如果你始终在 MSYS2 的 bash 中操作，当我没说 <del>但是既然已经完全使用 bash 了，为什么不用 Linux 呢</del>）</p><p>下载 <a href="https://nodejs.org/en/download">Nodejs</a>，<strong>可能</strong>需要魔法网络</p><p>有时 npm 官方源访问不畅，可能需要换源 <code>npm config set registry https://repo.nju.edu.cn/repository/npm/</code></p><p>安装Hexo：<br><code>npm install -g hexo-cli</code></p><h3 id="设置Github"><a href="#设置Github" class="headerlink" title="设置Github"></a>设置Github</h3><ul><li><code>git config --global user.name &quot;GitHub 用户名&quot;</code></li><li><code>git config --global user.email &quot;GitHub 邮箱&quot;</code></li><li>生成 SSHKey <code>ssh-keygen -t rsa -C &quot;GitHub 邮箱&quot;</code>，并上传 Github（其实不使用 SSH 也可以，但是使用 SSH 会方便很多）</li><li>创建 Github 仓库，使用 <code>用户名.github.io</code> 作为仓库名，会自动配置 GithubPages，<strong>不需要</strong>设置 GithubAction（部分教程似乎是错的）</li></ul><p>安装 Hexo git 插件：<code>npm install hexo-deployer-git --save</code></p><p>生成博客：<code>hexo init</code></p><p>编辑 <code>_config.yml</code>:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://用户名.github.io</span> <span class="comment"># 必须匹配，否则Github会提示Not Found</span></span><br><span class="line"></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">git@github.com:仓库名</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure><p>至此，一个博客的框架就搭建完成了</p><p>在 <code>_config.yml</code> 中编辑一下个人信息，就可以愉快的 Blogging 了</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">给博客起个可爱的标题吧</span> <span class="string">QwQ</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">副标题</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">博客描述</span></span><br><span class="line"><span class="attr">keywords:</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">给自己起一个可爱的名字吧</span> <span class="string">TwT</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span> <span class="comment"># 语言</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p><em>可以参考<a href="https://zhuanlan.zhihu.com/p/60578464">这篇文章</a>配置</em></p><h2 id="Hexo的使用"><a href="#Hexo的使用" class="headerlink" title="Hexo的使用"></a>Hexo的使用</h2><ul><li><code>hexo generate</code> 生成发布的页面，类似C++的编译，简写 <code>hexo g</code></li><li><code>hexo serve</code> 预览（可以理解为一个本地的服务器），类似运行程序（<strong>必须先生成</strong>，否则更改不会生效），简写 <code>hexo s</code></li><li><code>hexo deploy</code> 部署，可以理解为上传至Github（不要忘记<strong>生成</strong>），简写 <code>hexo d</code></li><li><code>hexo new &quot;文章标题&quot;</code> 生成新文章，简写 <code>hexo n</code><ul><li><code>hexo n</code> 默认生成 <code>post</code>，可以理解为普通的博客文章</li><li><code>hexo n page</code> 生成页面（类似于<a href="/about/">这个页面</a>），包括关于、友链页面</li></ul></li><li><code>hexo clean</code> 清除生成页面，当页面出现问题或有大变动（比如改变网站结构、改变主题时）</li></ul><h3 id="如何写文章"><a href="#如何写文章" class="headerlink" title="如何写文章"></a>如何写文章</h3><p><code>hexo n</code> 新建文章之后，在 <code>\source\_posts</code> 中便会出现一个新的 Markdown 文件</p><p>其中开头部分是这样的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: title</span><br><span class="line">date: 4202-00-00 25:61:61</span><br><span class="line">tags:</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>顾名思义，<code>title</code> 和 <code>date</code> 项目就是标题和时间了（于<a href="www.luogu.com.cn">洛谷</a>博客不同，定义了 <code>title</code> 后，就不需要再文章开头放一个 H1 了）</p><p><code>tags</code> 就是文章的标签了，用法如下</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">tags:</span> [<span class="string">QwQ</span>, <span class="string">AwA</span>, <span class="string">TwT</span>] <span class="comment"># 定义了 QwQ, AwA, TwT 三个标签</span></span><br></pre></td></tr></table></figure><p>此外，可以在文章中插入 <code>&lt;!--more--&gt;</code> 使文章在此处折叠（推荐）</p><p>也可以使用 <code>description</code> 选项，可以设置文章的描述（同时使文章折叠），但是不能换行</p><p>选择一个可爱的编辑器编辑这个 Markdown 文件就可以了</p><h2 id="NexT主题"><a href="#NexT主题" class="headerlink" title="NexT主题"></a>NexT主题</h2><h3 id="安装NexT主题"><a href="#安装NexT主题" class="headerlink" title="安装NexT主题"></a>安装NexT主题</h3><p>可以通过 <code>npm</code> 与 <code>git clone</code> 安装 NexT 主题，虽然官方推荐使用 <code>npm</code> 但是我还是选择了克隆储存库（自由度大一些）</p><p><code>git clone https://github.com/next-theme/hexo-theme-next.git themes/next</code></p><p>修改 <code>_config.yml</code>:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br></pre></td></tr></table></figure><p>就可以体验 NexT 主题了</p><p>如果再生成或预览时出现问题，可能是缺少依赖，请自行 Google 或 Bing（我这里似乎出现了问题，但是再虚拟机中并没有复现）</p><h3 id="NexT主题配置"><a href="#NexT主题配置" class="headerlink" title="NexT主题配置"></a>NexT主题配置</h3><p>将 <code>/themes/next/_config.yml</code> 复制到根目录，改名为 <code>_config.next.yml</code> 作为主题配置文件</p><p>其中有大量的选项（包含详细的英文注释），可以自己探索</p><p>我更改了一下几个地方</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Schemes</span></span><br><span class="line"><span class="attr">scheme:</span> <span class="string">Muse</span></span><br><span class="line"><span class="comment">#scheme: Mist</span></span><br><span class="line"><span class="comment">#scheme: Pisces</span></span><br><span class="line"><span class="comment">#scheme: Gemini</span></span><br></pre></td></tr></table></figure><ul><li>Schemes 可以理解为主题中的主题（<del>买一送四</del>），可以挨个尝试</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-user</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="comment">#categories: /categories/ || fa fa-th</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="comment">#schedule: /schedule/ || fa fa-calendar</span></span><br><span class="line">  <span class="comment">#sitemap: /sitemap.xml || fa fa-sitemap</span></span><br><span class="line">  <span class="comment">#commonweal: /404/ || fa fa-heartbeat</span></span><br></pre></td></tr></table></figure><ul><li>Menu，顾名思义，菜单</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Sidebar Avatar</span></span><br><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="comment"># Replace the default image and set the url here.</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">/images/avatar.gif</span></span><br><span class="line">  <span class="comment"># If true, the avatar will be displayed in circle.</span></span><br><span class="line">  <span class="attr">rounded:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># If true, the avatar will be rotated with the cursor.</span></span><br><span class="line">  <span class="attr">rotated:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><ul><li>Avatar 头像，选择一个可爱的头像吧（不要忘记在 <code>/source/images/</code> 中添加头像）</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">social:</span></span><br><span class="line">  <span class="attr">GitHub:</span> <span class="string">https://github.com/yourname</span> <span class="string">||</span> <span class="string">fab</span> <span class="string">fa-github</span></span><br><span class="line">  <span class="attr">E-Mail:</span> <span class="string">mailto:yourname@gmail.com</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-envelope</span></span><br><span class="line">  <span class="comment">#Weibo: https://weibo.com/yourname || fab fa-weibo</span></span><br><span class="line">  <span class="comment">#Twitter: https://twitter.com/yourname || fab fa-twitter</span></span><br><span class="line">  <span class="comment">#FB Page: https://www.facebook.com/yourname || fab fa-facebook</span></span><br><span class="line">  <span class="comment">#StackOverflow: https://stackoverflow.com/yourname || fab fa-stack-overflow</span></span><br><span class="line">  <span class="comment">#YouTube: https://youtube.com/yourname || fab fa-youtube</span></span><br><span class="line">  <span class="comment">#Instagram: https://instagram.com/yourname || fab fa-instagram</span></span><br><span class="line">  <span class="comment">#Skype: skype:yourname?call|chat || fab fa-skype</span></span><br></pre></td></tr></table></figure><ul><li>联系方式，不止支持这些联系方式，但是其他的可能需要自己找 Font Awesome 图标</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">math:</span></span><br><span class="line">  <span class="comment"># Default (false) will load mathjax / katex script on demand.</span></span><br><span class="line">  <span class="comment"># That is it only render those page which has `mathjax: true` in front-matter.</span></span><br><span class="line">  <span class="comment"># If you set it to true, it will load mathjax / katex script EVERY PAGE.</span></span><br><span class="line">  <span class="attr">every_page:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">mathjax:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># Available values: none | ams | all</span></span><br><span class="line">    <span class="attr">tags:</span> <span class="string">none</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">katex:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment"># See: https://github.com/KaTeX/KaTeX/tree/master/contrib/copy-tex</span></span><br><span class="line">    <span class="attr">copy_tex:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><ul><li><p>支持 $\LaTeX$，目前对 $KaTex$ 的支持还不足，首选 $MathJax$</p></li><li><p><code>darkmode: true</code> 支持暗色模式（自动切换）</p></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">codeblock:</span></span><br><span class="line">  <span class="comment"># Code Highlight theme</span></span><br><span class="line">  <span class="comment"># All available themes: https://theme-next.js.org/highlight/</span></span><br><span class="line">  <span class="attr">theme:</span></span><br><span class="line">    <span class="attr">light:</span> <span class="string">vs</span></span><br><span class="line">    <span class="attr">dark:</span> <span class="string">vs2015</span></span><br><span class="line">  <span class="attr">prism:</span></span><br><span class="line">    <span class="attr">light:</span> <span class="string">prism</span></span><br><span class="line">    <span class="attr">dark:</span> <span class="string">prism-dark</span></span><br><span class="line">  <span class="comment"># Add copy button on codeblock</span></span><br><span class="line">  <span class="attr">copy_button:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># Available values: default | flat | mac</span></span><br><span class="line">    <span class="attr">style:</span> <span class="string">default</span></span><br><span class="line">  <span class="comment"># Fold code block</span></span><br><span class="line">  <span class="attr">fold:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">800</span></span><br><span class="line">  <span class="comment"># Display language name</span></span><br><span class="line">  <span class="attr">language:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><ul><li>代码块，包括主题、复制按钮、代码块折叠（注意 <code>height</code> 单位不是行数，可能是像素）</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">font:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Uri of fonts host, e.g. https://fonts.googleapis.com (Default).</span></span><br><span class="line">  <span class="comment"># host:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Font options:</span></span><br><span class="line">  <span class="comment"># `external: true` will load this font family from `host` above.</span></span><br><span class="line">  <span class="comment"># `family: Times New Roman`. Without any quotes.</span></span><br><span class="line">  <span class="comment"># `size: x.x`. Use `em` as unit. Default: 1 (16px)</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Global font settings used for all elements inside &lt;body&gt;.</span></span><br><span class="line">  <span class="attr">global:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span> <span class="string">&#x27;Noto Sans SC&#x27;</span></span><br><span class="line">    <span class="comment"># size:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Font settings for site title (.site-title).</span></span><br><span class="line">  <span class="attr">title:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span> <span class="string">&#x27;Noto Serif SC&#x27;</span></span><br><span class="line">    <span class="comment"># size:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Font settings for headlines (&lt;h1&gt; to &lt;h6&gt;).</span></span><br><span class="line">  <span class="attr">headings:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span> <span class="string">&#x27;Noto Serif SC&#x27;</span></span><br><span class="line">    <span class="comment"># size:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Font settings for posts (.post-body).</span></span><br><span class="line">  <span class="attr">posts:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span> <span class="string">&#x27;Noto Sans SC&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Font settings for &lt;code&gt; and code blocks.</span></span><br><span class="line">  <span class="attr">codes:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span> <span class="string">&#x27;Source Code Pro&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>字体，如果因网络原因无法加载，可以更换 <code>host</code></li></ul><h3 id="NexT主题美化"><a href="#NexT主题美化" class="headerlink" title="NexT主题美化"></a>NexT主题美化</h3><p>NexT 主题太单调了？让 NexT 变得可爱一些吧！</p><p>NexT 主题的好处之一是个性化程度很高，别的主题需要改源码的地方很多 NexT 都可以实现</p><h4 id="添加背景"><a href="#添加背景" class="headerlink" title="添加背景"></a>添加背景</h4><p>新建文件 <code>/source/_data/styles.styl</code></p><p>在 <code>_config.next.yml</code> 中修改</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">custom_file_path:</span></span><br><span class="line">  <span class="comment">#head: source/_data/head.njk</span></span><br><span class="line">  <span class="comment">#header: source/_data/header.njk</span></span><br><span class="line">  <span class="comment">#sidebar: source/_data/sidebar.njk</span></span><br><span class="line">  <span class="comment">#postMeta: source/_data/post-meta.njk</span></span><br><span class="line">  <span class="comment">#postBodyStart: source/_data/post-body-start.njk</span></span><br><span class="line">  <span class="comment">#postBodyEnd: source/_data/post-body-end.njk</span></span><br><span class="line">  <span class="comment">#footer: source/_data/footer.njk</span></span><br><span class="line">  <span class="comment">#bodyEnd: source/_data/body-end.njk</span></span><br><span class="line">  <span class="comment">#variable: source/_data/variables.styl</span></span><br><span class="line">  <span class="comment">#mixin: source/_data/mixins.styl</span></span><br><span class="line">  <span class="attr">style:</span> <span class="string">source/_data/styles.styl</span></span><br></pre></td></tr></table></figure><p>编辑文件 <code>/source/_data/styles.styl</code></p><figure class="highlight styl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>:<span class="built_in">url</span>(/images/chtholly-background.png);  <span class="comment">// 背景图片的位置</span></span><br><span class="line">    <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">    <span class="attribute">background-attachment</span>: fixed; <span class="comment">// 是否滚动，fixed 固定</span></span><br><span class="line">    <span class="attribute">background-size</span>: cover;       <span class="comment">// 填充</span></span><br><span class="line">    <span class="comment">// background-position: center;  // 位置</span></span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">75%</span> <span class="number">50%</span>; <span class="comment">// 设置水平和垂直方向的位置，使移动端背景人物居中</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//文章背板的颜色</span></span><br><span class="line"><span class="selector-class">.main-inner</span> &gt; <span class="selector-class">.sub-menu</span>, <span class="selector-class">.main-inner</span> &gt; <span class="selector-class">.post-block</span>, <span class="selector-class">.main-inner</span> &gt; <span class="selector-class">.tabs-comment</span>, <span class="selector-class">.main-inner</span> &gt; <span class="selector-class">.comments</span>, <span class="selector-class">.main-inner</span> &gt; .pagination&#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, .<span class="number">7</span>);  <span class="comment">// 亮色模式</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">hexo-config</span>(<span class="string">&#x27;darkmode&#x27;</span>)) &#123;        <span class="comment">// 暗色模式</span></span><br><span class="line">        <span class="keyword">@media</span> (<span class="attribute">prefers-color-scheme</span>: dark) &#123;</span><br><span class="line">            <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.7</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">1em</span>;  <span class="comment">// Muse scheme 默认边距为 0，调整为 1em</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.main-inner</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0</span>);  <span class="comment">// 主体背景透明</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>网上的教程数目繁多，但是似乎没有令我满意的（主要是暗色模式支持），于是我参考了各种教程和 CSS 文档，手搓了暗色模式的特判（目前网上似乎没有写暗色模式的教程，也可能是我没找到）</p><p>最终效果和这篇文章一样（暗色模式能自动切换）</p><p>考虑到我并没有学过 CSS 和 HTML，所以或许有更好的实现方式，请各位大佬见谅</p><p><del>P.S. <code>/source/_data/styles.styl</code> 支持大部分CSS语法，可以自行探索</del></p><p>更正：<code>/source/_data/styles.styl</code> 使用 Stylus，但是确实支持大部分 CSS 语法</p><h2 id="文章评论区"><a href="#文章评论区" class="headerlink" title="文章评论区"></a>文章评论区</h2><p>使用 <a href="https://giscus.app/">giscus</a></p><p>需要在 blog 的 GitHub 仓库启用 Discussions，且安装 giscus app</p><p>在 blog 根目录下 <code>npm install hexo-next-giscus</code></p><p>将以下内容添加至 <code>/_config.next.yml</code>:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">giscus:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="comment"># Github repository name</span></span><br><span class="line">  <span class="attr">repo_id:</span> <span class="comment"># Github repository id</span></span><br><span class="line">  <span class="attr">category:</span> <span class="comment"># Github discussion category</span></span><br><span class="line">  <span class="attr">category_id:</span> <span class="comment"># Github discussion category id</span></span><br><span class="line">  <span class="comment"># Available values: pathname | url | title | og:title</span></span><br><span class="line">  <span class="attr">mapping:</span> <span class="string">pathname</span></span><br><span class="line">  <span class="comment"># Available values: 0 | 1</span></span><br><span class="line">  <span class="attr">reactions_enabled:</span> <span class="number">1</span></span><br><span class="line">   <span class="comment"># Available values: 0 | 1</span></span><br><span class="line">  <span class="attr">emit_metadata:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment"># Available values: light | light_high_contrast | light_protanopia | light_tritanopia | dark | dark_high_contrast | dark_protanopia | dark_tritanopia | dark_dimmed | preferred_color_scheme | transparent_dark | noborder_light | noborder_dark | noborder_gray | cobalt | purple_dark</span></span><br><span class="line">  <span class="attr">theme:</span> <span class="string">light</span></span><br><span class="line">  <span class="comment"># Available values: en | zh-CN</span></span><br><span class="line">  <span class="attr">lang:</span> <span class="string">en</span></span><br><span class="line">  <span class="comment"># Place the comment box above the comments</span></span><br><span class="line">  <span class="attr">input_position:</span> <span class="string">bottom</span></span><br><span class="line">  <span class="comment"># Load the comments lazily</span></span><br><span class="line">  <span class="attr">loading:</span> <span class="string">lazy</span></span><br></pre></td></tr></table></figure><p>在 giscus 网站上根据自己的需要配置后，将 <code>_config.next.yml</code> 中上述对应字段更改为网站给出的 <code>script</code> 标签中给出的值</p><p>参考 <a href="https://github.com/next-theme/hexo-next-giscus">hexo-next-giscus Github 仓库</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;这个博客的搭建过程&lt;/p&gt;
&lt;p&gt;基于 GithubPages + Hexo + NexT theme&lt;/p&gt;
&lt;p&gt;包括博客的搭建过程和 NexT 主题的配置与美化，特别的，包含支持&lt;strong&gt;暗色模式&lt;/strong&gt;的可爱&lt;strong&gt;背景图片&lt;/strong&gt;设置&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="Hexo" scheme="https://zhangyaoan.github.io/tags/Hexo/"/>
    
    <category term="Blog" scheme="https://zhangyaoan.github.io/tags/Blog/"/>
    
  </entry>
  
  <entry>
    <title>计算几何学习笔记</title>
    <link href="https://zhangyaoan.github.io/2024/04/05/Geometry-Note/"/>
    <id>https://zhangyaoan.github.io/2024/04/05/Geometry-Note/</id>
    <published>2024-04-05T09:25:48.000Z</published>
    <updated>2024-04-26T12:09:25.446Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>计算几何基础部分的学习笔记，包括</p><ul><li>点、向量、直线、多边形和圆的表示</li><li>点、直线和多边形与圆之间的关系</li><li>相关计算</li></ul><p>只是个人笔记捏~ 不是教程QwQ</p></blockquote><span id="more"></span><h2 id="0-EPS"><a href="#0-EPS" class="headerlink" title="0. EPS"></a>0. EPS</h2><p>用于解决 <code>double</code> 的精度误差问题，一般取 $10 ^ {-8}$</p><ol><li>$x &#x3D; 0$ 等价于 $|x| \le EPS$</li><li>$x &#x3D; y$ 等价于 $|x - y| \le EPS$</li><li>$x &lt; y$ 和 $x &gt; y$ 类似</li></ol><h2 id="INF-Note"><a href="#INF-Note" class="headerlink" title="INF. Note"></a>INF. Note</h2><blockquote><p>奇怪的错误:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">Point</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">double</span> y, x;</span><br><span class="line">    <span class="built_in">Point</span>(<span class="type">double</span> _x) : <span class="built_in">x</span>(_x), <span class="built_in">y</span>(x + <span class="number">1</span>) &#123;&#125;;  <span class="comment">// 出现 Bug ，y 先于 x 赋值</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>原因：参数列表赋值时其实是按照声明时的顺序，不是参数列表的顺序</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">Point</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">double</span> x, y;</span><br><span class="line">    <span class="built_in">Point</span>(<span class="type">double</span> _x) : <span class="built_in">x</span>(_x), <span class="built_in">y</span>(x + <span class="number">1</span>) &#123;&#125;;  <span class="comment">// 正确</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></blockquote><h2 id="1-点"><a href="#1-点" class="headerlink" title="1. 点"></a>1. 点</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">Point</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">double</span> x, y;</span><br><span class="line">    <span class="built_in">Point</span>()&#123;&#125;;</span><br><span class="line">    <span class="built_in">Point</span>(<span class="type">double</span> _x, <span class="type">double</span> _y) : <span class="built_in">x</span>(_x), <span class="built_in">y</span>(_y) &#123;&#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="点与点的距离"><a href="#点与点的距离" class="headerlink" title="点与点的距离"></a>点与点的距离</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">double</span> <span class="title">dist</span><span class="params">(<span class="type">const</span> Point &amp;a, <span class="type">const</span> Point &amp;b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> std::<span class="built_in">sqrt</span>((a.x - b.x) * (a.x - b.x) + (a.y - b.y) * (a.y - b.y));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">double</span> <span class="title">dist</span><span class="params">(<span class="type">const</span> Point &amp;a, <span class="type">const</span> Point &amp;b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> std::<span class="built_in">hypot</span>(a.x - b.x, a.y - b.y);  <span class="comment">// 使用库函数，求直角三角形斜边，包含于 cmath 头文件</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-向量"><a href="#2-向量" class="headerlink" title="2. 向量"></a>2. 向量</h2><p>定义：略</p><h3 id="表示"><a href="#表示" class="headerlink" title="表示"></a>表示</h3><p>可以直接用点表示向量</p><h3 id="运算"><a href="#运算" class="headerlink" title="运算"></a>运算</h3><p>扩展点的运算以实现向量运算</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">sgn</span><span class="params">(<span class="type">double</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">fabs</span>(x) &lt; EPS)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> x &gt; <span class="number">0</span> ? <span class="number">-1</span> : <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Point</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">double</span> x, y;</span><br><span class="line">    <span class="built_in">Point</span>()&#123;&#125;;</span><br><span class="line">    <span class="built_in">Point</span>(<span class="type">double</span> _x, <span class="type">double</span> _y) : <span class="built_in">x</span>(_x), <span class="built_in">y</span>(_y) &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 向量运算</span></span><br><span class="line">    Point <span class="keyword">operator</span>+ (<span class="type">const</span> Point &amp;b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Point</span>(x + b.x, y + b.y);</span><br><span class="line">    &#125;</span><br><span class="line">    Point <span class="keyword">operator</span>- (<span class="type">const</span> Point &amp;b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Point</span>(x - b.x, y - b.y);</span><br><span class="line">    &#125;</span><br><span class="line">    Point <span class="keyword">operator</span>* (<span class="type">double</span> k)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Point</span>(x * k, y * k);</span><br><span class="line">    &#125;</span><br><span class="line">    Point <span class="keyword">operator</span>/ (<span class="type">double</span> k)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Point</span>(x / k, y / k);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">bool</span> <span class="keyword">operator</span>== (<span class="type">const</span> Point &amp;b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">sgn</span>(x - b.x) == <span class="number">0</span> &amp;&amp; <span class="built_in">sgn</span>(y - b.y) == <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ol><li>向量的加减乘除（数乘）：见上</li><li>向量的点积：<ul><li>$A \cdot B &#x3D; |A| \cdot |B| \cdot \cos \theta$</li><li>简便算法：$A \cdot B &#x3D; x_A \cdot x_B + y_A \cdot y_B$ <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">double</span> <span class="title">Dot</span><span class="params">(<span class="type">const</span> Vector &amp;a, <span class="type">const</span> Vector &amp;b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.x * b.x + a.y * b.y;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>应用——判断 A B 的夹角：<ul><li>$A \cdot B &gt; 0$: $\theta$是锐角</li><li>$A \cdot B &lt; 0$: $\theta$是钝角</li><li>$A \cdot B &#x3D; 0$: $\theta$是直角</li></ul></li><li>应用——求 A B 的夹角：  <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">double</span> <span class="title">Angle</span><span class="params">(<span class="type">const</span> Vector &amp;a, <span class="type">const</span> Vector &amp;b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">acos</span>(<span class="built_in">Dot</span>(a, b) / a.<span class="built_in">len</span>() / b.<span class="built_in">len</span>());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li>向量的叉积：<ul><li>$A \times B &#x3D; |A| \cdot |B| \cdot \sin \theta$（$\theta$为由$A$旋转到$B$的角度，分正负）</li><li>叉积的方向垂直于平面（右手法则），在平面上无意义（P.S. $A \times B$方向与$B \times A$相反）</li><li>数值意义：$A$与$B$围成的平行四边形的面积</li><li>应用——平行四边形面积：以 $A$ $B$ $C$ 三点构成的平行四边形面积$S &#x3D; (C - A) \times (B - A)$</li><li>应用——判断两向量方向<ul><li>$A \times B &gt; 0$：B在A的逆时针</li><li>$A \times B &lt; 0$：B在A的顺时针</li><li>$A \times B &#x3D; 0$：A, B共线</li></ul></li><li>应用——向量旋转<ul><li>向量$(x, y)$逆时针旋转$\theta$得到向量$(x’, y’)$</li><li>$$<br>\begin{cases}<br>x’ &#x3D; x \cos \theta - y \sin \theta \<br>y’ &#x3D; x \sin \theta + y \cos \theta<br>\end{cases}<br>$$</li></ul></li><li>应用——判断两向量是否平行  <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">Parallel</span><span class="params">(<span class="type">const</span> Vector &amp;a, <span class="type">const</span> Vector &amp;b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sgn</span>(<span class="built_in">Cross</span>(a, b)) == <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ol><h2 id="3-直线"><a href="#3-直线" class="headerlink" title="3. 直线"></a>3. 直线</h2><h3 id="表示-1"><a href="#表示-1" class="headerlink" title="表示"></a>表示</h3><ol><li>两个点</li><li>方程 $y &#x3D; kx + b$<ul><li>判断平行：$k_1 &#x3D; k_2$，注意：精度可能不足，尽量少用</li></ul></li><li>方程 $ax + by + c &#x3D; 0$<ul><li>使用 <code>map(pair(a, b), c)</code>表示， <code>pair(a, b)</code> 表示斜率，<code>c</code> 表示斜率</li><li>判断平行：<code>pain(a1, b1)</code> 和 <code>pair(a2, b2)</code> ，$\frac{a_1}{\gcd(a_1, b_1)} &#x3D; \frac{a_2}{\gcd(a_2, b_2)}$, $\frac{b_1}{\gcd(a_1, b_1)} &#x3D; \frac{b_2}{\gcd(a_2, b_2)}$</li></ul></li><li>点 $P$ 和倾斜角 $\theta$</li><li>$p &#x3D; p_0 + vt$<ul><li>$p_0$ 和 $v$ 表示方向，$t$ 表示长度</li><li>$p_0 &#x3D; A$, $v &#x3D; \overrightarrow{AB}$</li><li>$t \in R$ 表示直线， $t &gt; 0$ 表示射线， $t \in [l, r]$ 表示线段<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">Line</span></span><br><span class="line">&#123;</span><br><span class="line">    Point p1, p2;</span><br><span class="line">    <span class="built_in">Line</span>() &#123;&#125;;</span><br><span class="line">    <span class="built_in">Line</span>(Point _p1, Point _p2) : <span class="built_in">p1</span>(_p1), <span class="built_in">p2</span>(_p2) &#123;&#125;;</span><br><span class="line">    <span class="built_in">Line</span>(<span class="type">double</span> a, <span class="type">double</span> b, <span class="type">double</span> c)   <span class="comment">// ax + by + c = 0</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">sgn</span>(b) == <span class="number">0</span>)   <span class="comment">// 斜率不存在</span></span><br><span class="line">        &#123;</span><br><span class="line">            p1 = <span class="built_in">Point</span>(- c / a, <span class="number">0</span>);</span><br><span class="line">            p2 = <span class="built_in">Point</span>(- c / a, <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            p1 = <span class="built_in">Point</span>(<span class="number">0</span>, - c / b);</span><br><span class="line">            p2 = <span class="built_in">Point</span>(<span class="number">1</span>, (- c - a) / b);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">Line</span>(Point p, <span class="type">double</span> theta)</span><br><span class="line">    &#123;</span><br><span class="line">        p1 = p;</span><br><span class="line">        <span class="comment">// p2 = Point(p.x + cos(theta), p.y + sin(theta));</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">sgn</span>(theta - PI / <span class="number">2</span>) == <span class="number">0</span>)</span><br><span class="line">            p2 = p1 + <span class="built_in">Point</span>(<span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            p2 = p1 + <span class="built_in">Point</span>(<span class="number">1</span>, <span class="built_in">tan</span>(theta));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> Line Segment;</span><br></pre></td></tr></table></figure></li></ul></li></ol><h3 id="点和直线的关系"><a href="#点和直线的关系" class="headerlink" title="点和直线的关系"></a>点和直线的关系</h3><p>点 $P$ 和 直线 $AB$（$A$ 在 $B$ 的左边）</p><ul><li>$\overrightarrow{AP} \times \overrightarrow{AB} &lt; 0$: P在AB左边</li><li>$\overrightarrow{AP} \times \overrightarrow{AB} &gt; 0$: P在AB右边</li><li>$\overrightarrow{AP} \times \overrightarrow{AB} &#x3D; 0$: P在AB上<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">Point_Line_Relation</span><span class="params">(Point p, Line l)</span>  <span class="comment">// p1 &lt; p2</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> c = <span class="built_in">sgn</span>(<span class="built_in">Cross</span>(p - l.p1, l.p2 - l.p1));</span><br><span class="line">    <span class="keyword">if</span> (c &lt; <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;  <span class="comment">// p 在 l 左侧</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(c &gt; <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span>;  <span class="comment">// p 在 l 右侧</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;  <span class="comment">// p 在 l 上</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="点和线段的位置关系"><a href="#点和线段的位置关系" class="headerlink" title="点和线段的位置关系"></a>点和线段的位置关系</h3><p>点 $P$ 在线段 $AB$ 上：</p><p>$\overrightarrow{AP} \times \overrightarrow{AB} &#x3D; 0$, $\overrightarrow{AP} \cdot \overrightarrow{BP} \le 0$</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">Point_on_Segment</span><span class="params">(<span class="type">const</span> Point &amp;p, <span class="type">const</span> Line &amp;l)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Point_Line_Relation</span>(p, l) == <span class="number">0</span> &amp;&amp;</span><br><span class="line">           <span class="built_in">sgn</span>(<span class="built_in">Dot</span>(p - l.p1, p - l.p2)) &lt;= <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="点到直线的距离"><a href="#点到直线的距离" class="headerlink" title="点到直线的距离"></a>点到直线的距离</h3><p>$d &#x3D; \frac{\overrightarrow{AP} \times \overrightarrow{AB}}{|AB|}$</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">double</span> <span class="title">Distance</span><span class="params">(<span class="type">const</span> Point &amp;p, <span class="type">const</span> Line &amp;l)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">fabs</span>(<span class="built_in">Cross</span>(p - l.p1, l.p2 - l.p1) / <span class="built_in">Distance</span>(l.p1, l.p2));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="点在直线上的投影"><a href="#点在直线上的投影" class="headerlink" title="点在直线上的投影"></a>点在直线上的投影</h3><p>点 $P$ 和 线段 $AB$（$A$ 在 $B$ 的左边），投影点为 $P_0$</p><p>$P_0 &#x3D; A + k\overrightarrow{AB} &#x3D; A + \frac{AP \cdot AB}{|AB| ^ 2}\overrightarrow{AB}$</p><p>推导过程没记下 QwQ</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Point <span class="title">Point_Line_Projection</span><span class="params">(<span class="type">const</span> Point &amp;p, <span class="type">const</span> Line &amp;l)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">double</span> k = <span class="built_in">Dot</span>(l.p2 - l.p1, p - l.p1) / (l.p2 - l.p1).<span class="built_in">len2</span>();</span><br><span class="line">    <span class="keyword">return</span> l.p1 + (l.p2 - l.p1) * k;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="点到线段的距离"><a href="#点到线段的距离" class="headerlink" title="点到线段的距离"></a>点到线段的距离</h3><ol><li>$P$ 不在线段 $AB$ 上（$\overrightarrow{AP} \cdot \overrightarrow{AP} &lt; 0$ 或 $\overrightarrow{BP} \cdot \overrightarrow{BA} &lt; 0$）：$\min(|AP|, |BP|)$</li><li>$P$ 在线段 $AB$ 上：$d_{(P, AB)}$<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">double</span> <span class="title">Point_Segment_Distance</span><span class="params">(<span class="type">const</span> Point &amp;p, <span class="type">const</span> Segment &amp;s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">min</span>(<span class="built_in">sgn</span>(<span class="built_in">Dot</span>(s.p2 - s.p1, p - s.p1)), <span class="built_in">sgn</span>(<span class="built_in">Dot</span>(p - s.p2, s.p1 - s.p2))) &lt; <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">min</span>(<span class="built_in">Distance</span>(p, s.p1), <span class="built_in">Distance</span>(p, s.p2));</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Distance</span>(p, s);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="点关于直线的对称点"><a href="#点关于直线的对称点" class="headerlink" title="点关于直线的对称点"></a>点关于直线的对称点</h3><p>投影点为 $Q$ ，对称点为 $P’$</p><p>$P’ &#x3D; P + 2\overrightarrow{PQ}$</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Point <span class="title">Point_Line_Symmetry</span><span class="params">(<span class="type">const</span> Point &amp;p, <span class="type">const</span> Line &amp;l)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Point q = <span class="built_in">Point_Line_Projection</span>(p, l);</span><br><span class="line">    <span class="keyword">return</span> p + (q - p) * <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="直线与直线的关系"><a href="#直线与直线的关系" class="headerlink" title="直线与直线的关系"></a>直线与直线的关系</h3><h4 id="判断两条直线是否平行"><a href="#判断两条直线是否平行" class="headerlink" title="判断两条直线是否平行"></a>判断两条直线是否平行</h4><blockquote><ol start="2"><li>方程 $y &#x3D; kx + b$<ul><li>判断平行：$k_1 &#x3D; k_2$，注意：精度可能不足，尽量少用</li></ul></li><li>方程 $ax + by + c &#x3D; 0$<ul><li>使用 <code>map(pair(a, b), c)</code>表示， <code>pair(a, b)</code> 表示斜率，<code>c</code> 表示斜率</li><li>判断平行：<code>pain(a1, b1)</code> 和 <code>pair(a2, b2)</code> ，$\frac{a_1}{\gcd(a_1, b_1)} &#x3D; \frac{a_2}{\gcd(a_2, b_2)}$, $\frac{b_1}{\gcd(a_1, b_1)} &#x3D; \frac{b_2}{\gcd(a_2, b_2)}$</li></ul></li></ol></blockquote><h4 id="求直线的交点"><a href="#求直线的交点" class="headerlink" title="求直线的交点"></a>求直线的交点</h4><ol><li>解两个方程</li><li>更优雅的方法：<ul><li>$$<br>   \begin{cases}<br>   \frac{|DP|}{|CP|} &#x3D; \frac{\overrightarrow{AD} \times \overrightarrow{AB}}{\overrightarrow{AB} \times \overrightarrow{AC}} \<br>   \frac{|DP|}{|CP|} &#x3D; \frac{x_D - x_P}{x_P - x_C}<br>   \end{cases}<br>$$</li><li>解方程即可<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Point <span class="title">Cross_Point</span><span class="params">(<span class="type">const</span> Line &amp;a, <span class="type">const</span> Line &amp;b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">double</span> s1 = <span class="built_in">Cross</span>(a.p2 - a.p1, b.p1 - a.p1);</span><br><span class="line">    <span class="type">double</span> s2 = <span class="built_in">Cross</span>(a.p2 - a.p1, b.p2 - a.p1);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Point</span>(b.p<span class="number">1.</span>x * s2 - b.p<span class="number">2.</span>x * s1, b.p<span class="number">1.</span>y * s2 - b.p<span class="number">2.</span>y * s1) / (s2 - s1);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ol><h3 id="线段与直线的位置关系"><a href="#线段与直线的位置关系" class="headerlink" title="线段与直线的位置关系"></a>线段与直线的位置关系</h3><p>直线AB，线段CD</p><p>若$\overrightarrow{AB} \times \overrightarrow{AC} \cdot \overrightarrow{AB} \times \overrightarrow{AD} &lt; 0$，则AB与CD相交</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">Cross_Segment</span><span class="params">(<span class="type">const</span> Line &amp;a, <span class="type">const</span> Segment &amp;b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">double</span> c1 = <span class="built_in">Cross</span>(a.p2 - a.p1, b.p1 - a.p1);</span><br><span class="line">    <span class="type">double</span> c2 = <span class="built_in">Cross</span>(a.p2 - a.p1, b.p2 - a.p1);</span><br><span class="line">    <span class="type">double</span> d1 = <span class="built_in">Cross</span>(b.p2 - b.p1, a.p1 - b.p1);</span><br><span class="line">    <span class="type">double</span> d2 = <span class="built_in">Cross</span>(b.p2 - b.p1, a.p2 - b.p1);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sgn</span>(c1) * <span class="built_in">sgn</span>(c2) &lt; <span class="number">0</span> &amp;&amp; <span class="built_in">sgn</span>(d1) * <span class="built_in">sgn</span>(d2) &lt; <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-多边形"><a href="#4-多边形" class="headerlink" title="4. 多边形"></a>4. 多边形</h2><h3 id="表示-2"><a href="#表示-2" class="headerlink" title="表示"></a>表示</h3><p>使用点的数组表示</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> std::vector&lt;Point&gt; Polygon;</span><br></pre></td></tr></table></figure><h3 id="求面积"><a href="#求面积" class="headerlink" title="求面积"></a>求面积</h3><p>$S &#x3D; \frac{1}{2} \sum_1^n{P_i \times P_{(i + 1) \mod n}}$</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">double</span> <span class="title">Polygon_Area</span><span class="params">(<span class="type">const</span> Polygon &amp;pol)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">double</span> area = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; pol.<span class="built_in">size</span>(); ++i)</span><br><span class="line">        area += <span class="built_in">Cross</span>(pol[i], pol[(i + <span class="number">1</span>) % pol.<span class="built_in">size</span>()]);</span><br><span class="line">    <span class="keyword">return</span> area / <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="求重心"><a href="#求重心" class="headerlink" title="求重心"></a>求重心</h3><p>对多边形进行三角剖分，求每个三角形的重心，计算每个重心对多边形重心的贡献（权为每个三角形占多边形面积比）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Point <span class="title">Polygon_Center</span><span class="params">(<span class="type">const</span> Polygon &amp;pol)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">Point <span class="title">ans</span><span class="params">(<span class="number">0</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">Polygon_Area</span>(pol) == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; pol.<span class="built_in">size</span>(); ++i)</span><br><span class="line">        ans = ans + (pol[i] + pol[(i + <span class="number">1</span>) % pol.<span class="built_in">size</span>()]) * <span class="built_in">Cross</span>(pol[i], pol[(i + <span class="number">1</span>) % pol.<span class="built_in">size</span>()]);</span><br><span class="line">        <span class="comment">// ans = ans + (pol[i] + pol[(i + 1) % pol.size()]) / 3 * Cross(pol[i], pol[(i + 1) % pol.size()]) / Polygon_Area(pol);</span></span><br><span class="line">    <span class="keyword">return</span> ans / <span class="built_in">Polygon_Area</span>(pol) / <span class="number">6</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="点与多边形的关系"><a href="#点与多边形的关系" class="headerlink" title="点与多边形的关系"></a>点与多边形的关系</h3><p>TODO: 推导</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">Point_in_Polygon</span><span class="params">(<span class="type">const</span> Point pt, <span class="type">const</span> Polygon &amp;pol)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> i : pol)</span><br><span class="line">        <span class="keyword">if</span>(pt == i)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; pol.<span class="built_in">size</span>(); ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function">Line <span class="title">t</span><span class="params">(pol[i], pol[(i + <span class="number">1</span>) % pol.size()])</span></span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">Point_on_Segment</span>(pt, t))</span><br><span class="line">            <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> num = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; pol.<span class="built_in">size</span>(); ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> j = (i + <span class="number">1</span>) % pol.<span class="built_in">size</span>();</span><br><span class="line">        <span class="type">int</span> c = <span class="built_in">sgn</span>(<span class="built_in">Cross</span>(pt - pol[j], pol[i] - pol[j]));</span><br><span class="line">        <span class="type">int</span> u = <span class="built_in">sgn</span>(pol[i].y - pt.y);</span><br><span class="line">        <span class="type">int</span> v = <span class="built_in">sgn</span>(pol[j].y - pt.y);</span><br><span class="line">        <span class="keyword">if</span>(c &gt; <span class="number">0</span> &amp;&amp; u &lt; <span class="number">0</span> &amp;&amp; v &gt;= <span class="number">0</span>)</span><br><span class="line">            ++num;</span><br><span class="line">        <span class="keyword">if</span>(c &lt; <span class="number">0</span> &amp;&amp; u &gt;= <span class="number">0</span> &amp;&amp; v &lt; <span class="number">0</span>)</span><br><span class="line">            --num;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> num != <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-圆"><a href="#5-圆" class="headerlink" title="5. 圆"></a>5. 圆</h2><h3 id="表示-3"><a href="#表示-3" class="headerlink" title="表示"></a>表示</h3><p>用一个点和半径表示圆</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">Circle</span></span><br><span class="line">&#123;</span><br><span class="line">    Point c;</span><br><span class="line">    <span class="type">double</span> r;</span><br><span class="line">    <span class="built_in">Circle</span>() &#123;&#125;;</span><br><span class="line">    <span class="built_in">Circle</span>(Point _c, <span class="type">double</span> _r) : <span class="built_in">c</span>(_c), <span class="built_in">r</span>(_r) &#123;&#125;;</span><br><span class="line">    <span class="built_in">Circle</span>(<span class="type">double</span> x, <span class="type">double</span> y, <span class="type">double</span> _r)  <span class="comment">// c = (x, y)</span></span><br><span class="line">    &#123;</span><br><span class="line">        c = <span class="built_in">Point</span>(x, y);</span><br><span class="line">        r = _r;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="点与圆的关系"><a href="#点与圆的关系" class="headerlink" title="点与圆的关系"></a>点与圆的关系</h3><p>点与圆心的距离为$d$</p><ul><li>$d &lt; r$ 点在圆内</li><li>$d &#x3D; r$ 点在圆上</li><li>$d &gt; r$ 点在圆外</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">Point_Circle_Relation</span><span class="params">(Point p, Circle c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">double</span> dst = <span class="built_in">Distance</span>(p, c.c);</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">sgn</span>(dst - c.r) &lt; <span class="number">0</span>)       <span class="comment">// 点在圆内</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">sgn</span>(dst - c.r) == <span class="number">0</span>) <span class="comment">// 点在圆上</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span>;                <span class="comment">// 点在圆外</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="点与线段-直线的关系"><a href="#点与线段-直线的关系" class="headerlink" title="点与线段&#x2F;直线的关系"></a>点与线段&#x2F;直线的关系</h3><p>直线（线段）与圆心的距离为$d$</p><ul><li>$d &lt; r$ 相交</li><li>$d &#x3D; r$ 相切</li><li>$d &gt; r$ 相离</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">Line_Circle_Relation</span><span class="params">(Line l, Circle c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">double</span> dst = <span class="built_in">Distance</span>(c.c, l);</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">sgn</span>(dst - c.r) &lt; <span class="number">0</span>)       <span class="comment">// 相交</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">sgn</span>(dst - c.r) == <span class="number">0</span>) <span class="comment">// 相切</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span>;                <span class="comment">// 相离</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Segment_Circle_Relation</span><span class="params">(Segment l, Circle c)</span> <span class="comment">// 类似 Line_Circle_Relation</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">double</span> dst = <span class="built_in">Point_Segment_Distance</span>(c.c, l);</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">sgn</span>(dst - c.r) &lt; <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">sgn</span>(dst - c.r) == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="求直线与圆的交点"><a href="#求直线与圆的交点" class="headerlink" title="求直线与圆的交点"></a>求直线与圆的交点</h3><p>先求点$P$在直线$AB$上的投影点$Q$和$Q$距离两交点的距离$k$（勾股定理），则$P_A &#x3D; Q - \frac{\overrightarrow{AB}}{|\overrightarrow{AB}|} \cdot k$, $P_B &#x3D; Q + \frac{\overrightarrow{AB}}{|\overrightarrow{AB}|} \cdot k$</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">Line_Cross_Circle</span><span class="params">(<span class="type">const</span> Line &amp;l, <span class="type">const</span> Circle &amp;c, Point &amp;pa, Point &amp;pb)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">Line_Circle_Relation</span>(l, c) == <span class="number">2</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    Point q = <span class="built_in">Point_Line_Projection</span>(c.c, l);</span><br><span class="line">    <span class="type">double</span> d = <span class="built_in">Distance</span>(c.c, l);</span><br><span class="line">    <span class="type">double</span> k = <span class="built_in">sqrt</span>(c.r * c.r - d * d);</span><br><span class="line">    Vector v = l.p2 - l.p1;</span><br><span class="line">    pa = q - v / v.<span class="built_in">len</span>() * k;</span><br><span class="line">    pb = q + v / v.<span class="built_in">len</span>() * k;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">Line_Circle_Relation</span>(l, c) == <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="两个圆的交点与相交面积"><a href="#两个圆的交点与相交面积" class="headerlink" title="两个圆的交点与相交面积"></a>两个圆的交点与相交面积</h3><p>求交点：连接两个圆心和四条半径，则可以通过余弦定理求出半径与圆心连线的夹角，再求出圆心连线与水平线的夹角，进而求出两交点与水平线的夹角，即可求出其坐标</p><p>求相交面积：连接两交点，可以使用扇形面积减去三角形面积求出一侧的面积，同理可求出另一侧的面积</p><p>Code: TODO</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;计算几何基础部分的学习笔记，包括&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;点、向量、直线、多边形和圆的表示&lt;/li&gt;
&lt;li&gt;点、直线和多边形与圆之间的关系&lt;/li&gt;
&lt;li&gt;相关计算&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;只是个人笔记捏~ 不是教程QwQ&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="OI" scheme="https://zhangyaoan.github.io/tags/OI/"/>
    
    <category term="计算几何" scheme="https://zhangyaoan.github.io/tags/%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95/"/>
    
    <category term="笔记" scheme="https://zhangyaoan.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
</feed>
